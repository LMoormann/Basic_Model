controllable tube_1_boom_barrier_1_actuator_up_c_on;
controllable tube_1_boom_barrier_1_actuator_up_c_off;
controllable tube_1_boom_barrier_1_actuator_down_c_on;
controllable tube_1_boom_barrier_1_actuator_down_c_off;
controllable tube_1_boom_barrier_1_actuator_down_c_off_emergency;
uncontrollable tube_1_boom_barrier_1_sensor_open_u_on;
uncontrollable tube_1_boom_barrier_1_sensor_open_u_off;
uncontrollable tube_1_boom_barrier_1_sensor_closed_u_on;
uncontrollable tube_1_boom_barrier_1_sensor_closed_u_off;
uncontrollable tube_1_boom_barrier_1_obstacle_detection_u_on;
uncontrollable tube_1_boom_barrier_1_obstacle_detection_u_off;
controllable tube_1_boom_barrier_2_actuator_up_c_on;
controllable tube_1_boom_barrier_2_actuator_up_c_off;
controllable tube_1_boom_barrier_2_actuator_down_c_on;
controllable tube_1_boom_barrier_2_actuator_down_c_off;
controllable tube_1_boom_barrier_2_actuator_down_c_off_emergency;
uncontrollable tube_1_boom_barrier_2_sensor_open_u_on;
uncontrollable tube_1_boom_barrier_2_sensor_open_u_off;
uncontrollable tube_1_boom_barrier_2_sensor_closed_u_on;
uncontrollable tube_1_boom_barrier_2_sensor_closed_u_off;
uncontrollable tube_1_boom_barrier_2_obstacle_detection_u_on;
uncontrollable tube_1_boom_barrier_2_obstacle_detection_u_off;
controllable tube_1_traffic_light_1_mode_c_off;
controllable tube_1_traffic_light_1_mode_c_yellow;
controllable tube_1_traffic_light_1_mode_c_flashing;
controllable tube_1_traffic_light_1_mode_c_red;
uncontrollable tube_1_traffic_light_1_release_signal_u_on;
uncontrollable tube_1_traffic_light_1_release_signal_u_off;
controllable tube_1_traffic_light_1_timer_release_signal_c_on;
controllable tube_1_traffic_light_1_timer_release_signal_c_reset;
uncontrollable tube_1_traffic_light_1_timer_release_signal_u_timeout;
controllable tube_1_traffic_light_2_mode_c_off;
controllable tube_1_traffic_light_2_mode_c_yellow;
controllable tube_1_traffic_light_2_mode_c_flashing;
controllable tube_1_traffic_light_2_mode_c_red;
uncontrollable tube_1_traffic_light_2_release_signal_u_on;
uncontrollable tube_1_traffic_light_2_release_signal_u_off;
controllable tube_1_traffic_light_2_timer_release_signal_c_on;
controllable tube_1_traffic_light_2_timer_release_signal_c_reset;
uncontrollable tube_1_traffic_light_2_timer_release_signal_u_timeout;
controllable tube_1_traffic_light_3_mode_c_off;
controllable tube_1_traffic_light_3_mode_c_yellow;
controllable tube_1_traffic_light_3_mode_c_flashing;
controllable tube_1_traffic_light_3_mode_c_red;
uncontrollable tube_1_traffic_light_3_release_signal_u_on;
uncontrollable tube_1_traffic_light_3_release_signal_u_off;
controllable tube_1_traffic_light_3_timer_release_signal_c_on;
controllable tube_1_traffic_light_3_timer_release_signal_c_reset;
uncontrollable tube_1_traffic_light_3_timer_release_signal_u_timeout;
controllable tube_1_j32_mode_c_on;
controllable tube_1_j32_mode_c_off;
controllable tube_1_j32_timer_release_signal_c_on;
controllable tube_1_j32_timer_release_signal_c_reset;
uncontrollable tube_1_j32_timer_release_signal_u_timeout;
controllable tube_1_matrix_sign_traffic_light_c_on;
controllable tube_1_matrix_sign_traffic_light_c_off;
controllable tube_1_matrix_sign_free_c_on;
controllable tube_1_matrix_sign_free_c_off;
uncontrollable tube_1_SOS_u_on;
uncontrollable tube_1_SOS_u_off;
uncontrollable tube_1_emergency_cabinet_A_sensor_open_u_on;
uncontrollable tube_1_emergency_cabinet_A_sensor_open_u_off;
uncontrollable tube_1_emergency_cabinet_A_emergency_phone_u_on;
uncontrollable tube_1_emergency_cabinet_A_emergency_phone_u_off;
uncontrollable tube_1_emergency_cabinet_A_hand_extinguisher_u_on;
uncontrollable tube_1_emergency_cabinet_A_hand_extinguisher_u_off;
uncontrollable tube_1_emergency_cabinet_A_fire_hose_u_on;
uncontrollable tube_1_emergency_cabinet_A_fire_hose_u_off;
uncontrollable tube_1_emergency_cabinet_C_sensor_open_u_on;
uncontrollable tube_1_emergency_cabinet_C_sensor_open_u_off;
uncontrollable tube_1_emergency_cabinet_C_emergency_phone_u_on;
uncontrollable tube_1_emergency_cabinet_C_emergency_phone_u_off;
uncontrollable tube_1_emergency_cabinet_C_hand_extinguisher_u_on;
uncontrollable tube_1_emergency_cabinet_C_hand_extinguisher_u_off;
uncontrollable tube_1_smoke_detection_u_0;
uncontrollable tube_1_smoke_detection_u_1;
uncontrollable tube_1_smoke_detection_u_2;
uncontrollable tube_1_smoke_detection_u_3;
uncontrollable tube_1_smoke_detection_u_4;
uncontrollable tube_1_smoke_detection_u_5;
uncontrollable tube_1_smoke_detection_u_6;
uncontrollable tube_1_smoke_detection_u_7;
uncontrollable tube_1_smoke_detection_u_8;
controllable tube_1_ventilation_c_0;
controllable tube_1_ventilation_c_1;
controllable tube_1_ventilation_c_2;
controllable tube_1_ventilation_c_3;
controllable tube_1_ventilation_c_4;
controllable tube_1_ventilation_c_5;
controllable tube_1_ventilation_c_6;
controllable tube_1_ventilation_c_7;
controllable tube_1_ventilation_c_8;
controllable tube_1_ventilation_entrance_c_0;
controllable tube_1_ventilation_entrance_c_1;
controllable tube_1_ventilation_entrance_c_2;
controllable tube_1_ventilation_entrance_c_3;
controllable tube_1_ventilation_entrance_c_4;
controllable tube_1_ventilation_entrance_c_5;
controllable tube_1_ventilation_entrance_c_6;
controllable tube_1_ventilation_entrance_c_7;
controllable tube_1_ventilation_entrance_c_8;
controllable tube_1_ventilation_direction_c_along;
controllable tube_1_ventilation_direction_c_against;
uncontrollable tube_1_lightsensor_u_0;
uncontrollable tube_1_lightsensor_u_1;
uncontrollable tube_1_lightsensor_u_2;
uncontrollable tube_1_lightsensor_u_3;
uncontrollable tube_1_lightsensor_u_4;
uncontrollable tube_1_lightsensor_u_5;
uncontrollable tube_1_lightsensor_u_6;
uncontrollable tube_1_lightsensor_u_7;
uncontrollable tube_1_lightsensor_u_8;
controllable tube_1_lighting_c_0;
controllable tube_1_lighting_c_1;
controllable tube_1_lighting_c_2;
controllable tube_1_lighting_c_3;
controllable tube_1_lighting_c_4;
controllable tube_1_lighting_c_5;
controllable tube_1_lighting_c_6;
controllable tube_1_lighting_c_7;
controllable tube_1_lighting_c_8;
controllable tube_1_channel_c_1_off;
controllable tube_1_channel_c_2_off;
controllable tube_1_channel_c_3_off;
controllable tube_1_channel_c_4_off;
controllable tube_1_channel_c_5_off;
controllable tube_1_channel_c_6_off;
controllable tube_1_channel_c_1_on;
controllable tube_1_channel_c_2_on;
controllable tube_1_channel_c_3_on;
controllable tube_1_channel_c_4_on;
controllable tube_1_channel_c_5_on;
controllable tube_1_channel_c_6_on;
controllable tube_1_recorder_c_on;
controllable tube_1_recorder_c_off;
uncontrollable tube_1_escape_door_sensor_open_u_on;
uncontrollable tube_1_escape_door_sensor_open_u_off;
controllable tube_1_escape_door_sound_beacon_c_on;
controllable tube_1_escape_door_sound_beacon_c_off;
controllable tube_1_escape_door_contour_lighting_c_on;
controllable tube_1_escape_door_contour_lighting_c_off;
controllable tube_1_intercom_c_on;
controllable tube_1_intercom_c_off;
controllable tube_1_switch_timer_audio_c_on;
controllable tube_1_switch_timer_audio_c_off;
uncontrollable tube_1_switch_timer_audio_u_timeout;
controllable tube_1_mode_c_operational;
controllable tube_1_mode_c_emergency;
controllable tube_1_mode_c_recovery;
controllable tube_1_mode_c_support;
controllable tube_1_standby_c_on;
controllable tube_1_standby_c_off;
controllable tube_1_evacuation_c_on;
controllable tube_1_evacuation_c_off;
uncontrollable tube_1_button_operational_button_u_press;
controllable tube_1_button_operational_observer_c_done;
uncontrollable tube_1_button_evacuation_button_u_press;
controllable tube_1_button_evacuation_observer_c_done;
uncontrollable tube_1_button_recovery_button_u_press;
controllable tube_1_button_recovery_observer_c_done;
controllable tube_2_boom_barrier_1_actuator_up_c_on;
controllable tube_2_boom_barrier_1_actuator_up_c_off;
controllable tube_2_boom_barrier_1_actuator_down_c_on;
controllable tube_2_boom_barrier_1_actuator_down_c_off;
controllable tube_2_boom_barrier_1_actuator_down_c_off_emergency;
uncontrollable tube_2_boom_barrier_1_sensor_open_u_on;
uncontrollable tube_2_boom_barrier_1_sensor_open_u_off;
uncontrollable tube_2_boom_barrier_1_sensor_closed_u_on;
uncontrollable tube_2_boom_barrier_1_sensor_closed_u_off;
uncontrollable tube_2_boom_barrier_1_obstacle_detection_u_on;
uncontrollable tube_2_boom_barrier_1_obstacle_detection_u_off;
controllable tube_2_boom_barrier_2_actuator_up_c_on;
controllable tube_2_boom_barrier_2_actuator_up_c_off;
controllable tube_2_boom_barrier_2_actuator_down_c_on;
controllable tube_2_boom_barrier_2_actuator_down_c_off;
controllable tube_2_boom_barrier_2_actuator_down_c_off_emergency;
uncontrollable tube_2_boom_barrier_2_sensor_open_u_on;
uncontrollable tube_2_boom_barrier_2_sensor_open_u_off;
uncontrollable tube_2_boom_barrier_2_sensor_closed_u_on;
uncontrollable tube_2_boom_barrier_2_sensor_closed_u_off;
uncontrollable tube_2_boom_barrier_2_obstacle_detection_u_on;
uncontrollable tube_2_boom_barrier_2_obstacle_detection_u_off;
controllable tube_2_traffic_light_1_mode_c_off;
controllable tube_2_traffic_light_1_mode_c_yellow;
controllable tube_2_traffic_light_1_mode_c_flashing;
controllable tube_2_traffic_light_1_mode_c_red;
uncontrollable tube_2_traffic_light_1_release_signal_u_on;
uncontrollable tube_2_traffic_light_1_release_signal_u_off;
controllable tube_2_traffic_light_1_timer_release_signal_c_on;
controllable tube_2_traffic_light_1_timer_release_signal_c_reset;
uncontrollable tube_2_traffic_light_1_timer_release_signal_u_timeout;
controllable tube_2_traffic_light_2_mode_c_off;
controllable tube_2_traffic_light_2_mode_c_yellow;
controllable tube_2_traffic_light_2_mode_c_flashing;
controllable tube_2_traffic_light_2_mode_c_red;
uncontrollable tube_2_traffic_light_2_release_signal_u_on;
uncontrollable tube_2_traffic_light_2_release_signal_u_off;
controllable tube_2_traffic_light_2_timer_release_signal_c_on;
controllable tube_2_traffic_light_2_timer_release_signal_c_reset;
uncontrollable tube_2_traffic_light_2_timer_release_signal_u_timeout;
controllable tube_2_traffic_light_3_mode_c_off;
controllable tube_2_traffic_light_3_mode_c_yellow;
controllable tube_2_traffic_light_3_mode_c_flashing;
controllable tube_2_traffic_light_3_mode_c_red;
uncontrollable tube_2_traffic_light_3_release_signal_u_on;
uncontrollable tube_2_traffic_light_3_release_signal_u_off;
controllable tube_2_traffic_light_3_timer_release_signal_c_on;
controllable tube_2_traffic_light_3_timer_release_signal_c_reset;
uncontrollable tube_2_traffic_light_3_timer_release_signal_u_timeout;
controllable tube_2_j32_mode_c_on;
controllable tube_2_j32_mode_c_off;
controllable tube_2_j32_timer_release_signal_c_on;
controllable tube_2_j32_timer_release_signal_c_reset;
uncontrollable tube_2_j32_timer_release_signal_u_timeout;
controllable tube_2_matrix_sign_traffic_light_c_on;
controllable tube_2_matrix_sign_traffic_light_c_off;
controllable tube_2_matrix_sign_free_c_on;
controllable tube_2_matrix_sign_free_c_off;
uncontrollable tube_2_SOS_u_on;
uncontrollable tube_2_SOS_u_off;
uncontrollable tube_2_emergency_cabinet_A_sensor_open_u_on;
uncontrollable tube_2_emergency_cabinet_A_sensor_open_u_off;
uncontrollable tube_2_emergency_cabinet_A_emergency_phone_u_on;
uncontrollable tube_2_emergency_cabinet_A_emergency_phone_u_off;
uncontrollable tube_2_emergency_cabinet_A_hand_extinguisher_u_on;
uncontrollable tube_2_emergency_cabinet_A_hand_extinguisher_u_off;
uncontrollable tube_2_emergency_cabinet_A_fire_hose_u_on;
uncontrollable tube_2_emergency_cabinet_A_fire_hose_u_off;
uncontrollable tube_2_emergency_cabinet_C_sensor_open_u_on;
uncontrollable tube_2_emergency_cabinet_C_sensor_open_u_off;
uncontrollable tube_2_emergency_cabinet_C_emergency_phone_u_on;
uncontrollable tube_2_emergency_cabinet_C_emergency_phone_u_off;
uncontrollable tube_2_emergency_cabinet_C_hand_extinguisher_u_on;
uncontrollable tube_2_emergency_cabinet_C_hand_extinguisher_u_off;
uncontrollable tube_2_smoke_detection_u_0;
uncontrollable tube_2_smoke_detection_u_1;
uncontrollable tube_2_smoke_detection_u_2;
uncontrollable tube_2_smoke_detection_u_3;
uncontrollable tube_2_smoke_detection_u_4;
uncontrollable tube_2_smoke_detection_u_5;
uncontrollable tube_2_smoke_detection_u_6;
uncontrollable tube_2_smoke_detection_u_7;
uncontrollable tube_2_smoke_detection_u_8;
controllable tube_2_ventilation_c_0;
controllable tube_2_ventilation_c_1;
controllable tube_2_ventilation_c_2;
controllable tube_2_ventilation_c_3;
controllable tube_2_ventilation_c_4;
controllable tube_2_ventilation_c_5;
controllable tube_2_ventilation_c_6;
controllable tube_2_ventilation_c_7;
controllable tube_2_ventilation_c_8;
controllable tube_2_ventilation_entrance_c_0;
controllable tube_2_ventilation_entrance_c_1;
controllable tube_2_ventilation_entrance_c_2;
controllable tube_2_ventilation_entrance_c_3;
controllable tube_2_ventilation_entrance_c_4;
controllable tube_2_ventilation_entrance_c_5;
controllable tube_2_ventilation_entrance_c_6;
controllable tube_2_ventilation_entrance_c_7;
controllable tube_2_ventilation_entrance_c_8;
controllable tube_2_ventilation_direction_c_along;
controllable tube_2_ventilation_direction_c_against;
uncontrollable tube_2_lightsensor_u_0;
uncontrollable tube_2_lightsensor_u_1;
uncontrollable tube_2_lightsensor_u_2;
uncontrollable tube_2_lightsensor_u_3;
uncontrollable tube_2_lightsensor_u_4;
uncontrollable tube_2_lightsensor_u_5;
uncontrollable tube_2_lightsensor_u_6;
uncontrollable tube_2_lightsensor_u_7;
uncontrollable tube_2_lightsensor_u_8;
controllable tube_2_lighting_c_0;
controllable tube_2_lighting_c_1;
controllable tube_2_lighting_c_2;
controllable tube_2_lighting_c_3;
controllable tube_2_lighting_c_4;
controllable tube_2_lighting_c_5;
controllable tube_2_lighting_c_6;
controllable tube_2_lighting_c_7;
controllable tube_2_lighting_c_8;
controllable tube_2_channel_c_1_off;
controllable tube_2_channel_c_2_off;
controllable tube_2_channel_c_3_off;
controllable tube_2_channel_c_4_off;
controllable tube_2_channel_c_5_off;
controllable tube_2_channel_c_6_off;
controllable tube_2_channel_c_1_on;
controllable tube_2_channel_c_2_on;
controllable tube_2_channel_c_3_on;
controllable tube_2_channel_c_4_on;
controllable tube_2_channel_c_5_on;
controllable tube_2_channel_c_6_on;
controllable tube_2_recorder_c_on;
controllable tube_2_recorder_c_off;
uncontrollable tube_2_escape_door_sensor_open_u_on;
uncontrollable tube_2_escape_door_sensor_open_u_off;
controllable tube_2_escape_door_sound_beacon_c_on;
controllable tube_2_escape_door_sound_beacon_c_off;
controllable tube_2_escape_door_contour_lighting_c_on;
controllable tube_2_escape_door_contour_lighting_c_off;
controllable tube_2_intercom_c_on;
controllable tube_2_intercom_c_off;
controllable tube_2_switch_timer_audio_c_on;
controllable tube_2_switch_timer_audio_c_off;
uncontrollable tube_2_switch_timer_audio_u_timeout;
controllable tube_2_mode_c_operational;
controllable tube_2_mode_c_emergency;
controllable tube_2_mode_c_recovery;
controllable tube_2_mode_c_support;
controllable tube_2_standby_c_on;
controllable tube_2_standby_c_off;
controllable tube_2_evacuation_c_on;
controllable tube_2_evacuation_c_off;
uncontrollable tube_2_button_operational_button_u_press;
controllable tube_2_button_operational_observer_c_done;
uncontrollable tube_2_button_evacuation_button_u_press;
controllable tube_2_button_evacuation_observer_c_done;
uncontrollable tube_2_button_recovery_button_u_press;
controllable tube_2_button_recovery_observer_c_done;
controllable middle_tunnel_channel_pressure_c_off;
controllable middle_tunnel_channel_pressure_c_left;
controllable middle_tunnel_channel_pressure_c_right;
controllable middle_tunnel_channel_lighting_c_on;
controllable middle_tunnel_channel_lighting_c_off;
controllable middle_tunnel_channel_dynamic_escaperoute_indication_c_off;
controllable middle_tunnel_channel_dynamic_escaperoute_indication_c_upward;
controllable middle_tunnel_channel_dynamic_escaperoute_indication_c_downward;
controllable middle_tunnel_channel_intercom_c_on;
controllable middle_tunnel_channel_intercom_c_off;
plant automaton tube_1_boom_barrier_1_actuator_up:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_up_c_on goto on;
  location on:
    marked false;
    edge tube_1_boom_barrier_1_actuator_up_c_off goto off;
end
plant automaton tube_1_boom_barrier_1_actuator_down:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_on goto on;
  location on:
    marked false;
    edge tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency goto off;
end
plant automaton tube_1_boom_barrier_1_sensor_open:
  location off:
    initial false;
    marked false;
    edge tube_1_boom_barrier_1_sensor_open_u_on goto on;
  location on:
    initial;
    marked;
    edge tube_1_boom_barrier_1_sensor_open_u_off goto off;
end
plant automaton tube_1_boom_barrier_1_sensor_closed:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_1_sensor_closed_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_boom_barrier_1_sensor_closed_u_off goto off;
end
plant automaton tube_1_boom_barrier_1_physical_relation:
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_sensor_open_u_on when tube_1_boom_barrier_1_actuator_up.on and tube_1_boom_barrier_1_sensor_closed.off;
    edge tube_1_boom_barrier_1_sensor_closed_u_off when tube_1_boom_barrier_1_actuator_up.on;
    edge tube_1_boom_barrier_1_sensor_open_u_off when tube_1_boom_barrier_1_actuator_down.on;
    edge tube_1_boom_barrier_1_sensor_closed_u_on when tube_1_boom_barrier_1_actuator_down.on and tube_1_boom_barrier_1_sensor_open.off;
end
plant automaton tube_1_boom_barrier_1_obstacle_detection:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_1_obstacle_detection_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_boom_barrier_1_obstacle_detection_u_off goto off;
end
plant automaton tube_1_boom_barrier_2_actuator_up:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_2_actuator_up_c_on goto on;
  location on:
    marked false;
    edge tube_1_boom_barrier_2_actuator_up_c_off goto off;
end
plant automaton tube_1_boom_barrier_2_actuator_down:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_2_actuator_down_c_on goto on;
  location on:
    marked false;
    edge tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency goto off;
end
plant automaton tube_1_boom_barrier_2_sensor_open:
  location off:
    initial false;
    marked false;
    edge tube_1_boom_barrier_2_sensor_open_u_on goto on;
  location on:
    initial;
    marked;
    edge tube_1_boom_barrier_2_sensor_open_u_off goto off;
end
plant automaton tube_1_boom_barrier_2_sensor_closed:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_2_sensor_closed_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_boom_barrier_2_sensor_closed_u_off goto off;
end
plant automaton tube_1_boom_barrier_2_physical_relation:
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_2_sensor_open_u_on when tube_1_boom_barrier_2_actuator_up.on and tube_1_boom_barrier_2_sensor_closed.off;
    edge tube_1_boom_barrier_2_sensor_closed_u_off when tube_1_boom_barrier_2_actuator_up.on;
    edge tube_1_boom_barrier_2_sensor_open_u_off when tube_1_boom_barrier_2_actuator_down.on;
    edge tube_1_boom_barrier_2_sensor_closed_u_on when tube_1_boom_barrier_2_actuator_down.on and tube_1_boom_barrier_2_sensor_open.off;
end
plant automaton tube_1_boom_barrier_2_obstacle_detection:
  location off:
    initial;
    marked;
    edge tube_1_boom_barrier_2_obstacle_detection_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_boom_barrier_2_obstacle_detection_u_off goto off;
end
plant automaton tube_1_traffic_light_1_mode:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_1_mode_c_flashing goto flashing;
  location flashing:
    edge tube_1_traffic_light_1_mode_c_off goto off;
    edge tube_1_traffic_light_1_mode_c_yellow goto yellow;
  location yellow:
    edge tube_1_traffic_light_1_mode_c_red goto red;
  location red:
    edge tube_1_traffic_light_1_mode_c_flashing goto flashing;
end
plant automaton tube_1_traffic_light_1_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_1_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_traffic_light_1_release_signal_u_off goto off;
end
plant automaton tube_1_traffic_light_1_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_1_timer_release_signal_c_on goto running;
  location running:
    edge tube_1_traffic_light_1_timer_release_signal_c_reset goto off;
    edge tube_1_traffic_light_1_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_1_traffic_light_1_timer_release_signal_c_reset goto off;
end
plant automaton tube_1_traffic_light_1_relation:
  location:
    initial;
    marked;
    edge tube_1_traffic_light_1_release_signal_u_on when tube_1_traffic_light_1_mode.red and tube_1_traffic_light_1_timer_release_signal.finished;
    edge tube_1_traffic_light_1_release_signal_u_off when not tube_1_traffic_light_1_mode.red;
end
plant automaton tube_1_traffic_light_2_mode:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_2_mode_c_flashing goto flashing;
  location flashing:
    edge tube_1_traffic_light_2_mode_c_off goto off;
    edge tube_1_traffic_light_2_mode_c_yellow goto yellow;
  location yellow:
    edge tube_1_traffic_light_2_mode_c_red goto red;
  location red:
    edge tube_1_traffic_light_2_mode_c_flashing goto flashing;
end
plant automaton tube_1_traffic_light_2_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_2_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_traffic_light_2_release_signal_u_off goto off;
end
plant automaton tube_1_traffic_light_2_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_2_timer_release_signal_c_on goto running;
  location running:
    edge tube_1_traffic_light_2_timer_release_signal_c_reset goto off;
    edge tube_1_traffic_light_2_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_1_traffic_light_2_timer_release_signal_c_reset goto off;
end
plant automaton tube_1_traffic_light_2_relation:
  location:
    initial;
    marked;
    edge tube_1_traffic_light_2_release_signal_u_on when tube_1_traffic_light_2_mode.red and tube_1_traffic_light_2_timer_release_signal.finished;
    edge tube_1_traffic_light_2_release_signal_u_off when not tube_1_traffic_light_2_mode.red;
end
plant automaton tube_1_traffic_light_3_mode:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_3_mode_c_flashing goto flashing;
  location flashing:
    edge tube_1_traffic_light_3_mode_c_off goto off;
    edge tube_1_traffic_light_3_mode_c_yellow goto yellow;
  location yellow:
    edge tube_1_traffic_light_3_mode_c_red goto red;
  location red:
    edge tube_1_traffic_light_3_mode_c_flashing goto flashing;
end
plant automaton tube_1_traffic_light_3_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_3_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_traffic_light_3_release_signal_u_off goto off;
end
plant automaton tube_1_traffic_light_3_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_traffic_light_3_timer_release_signal_c_on goto running;
  location running:
    edge tube_1_traffic_light_3_timer_release_signal_c_reset goto off;
    edge tube_1_traffic_light_3_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_1_traffic_light_3_timer_release_signal_c_reset goto off;
end
plant automaton tube_1_traffic_light_3_relation:
  location:
    initial;
    marked;
    edge tube_1_traffic_light_3_release_signal_u_on when tube_1_traffic_light_3_mode.red and tube_1_traffic_light_3_timer_release_signal.finished;
    edge tube_1_traffic_light_3_release_signal_u_off when not tube_1_traffic_light_3_mode.red;
end
plant automaton tube_1_j32_mode:
  location off:
    initial;
    marked;
    edge tube_1_j32_mode_c_on goto on;
  location on:
    marked false;
    edge tube_1_j32_mode_c_off goto off;
end
plant automaton tube_1_j32_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_1_j32_timer_release_signal_c_on goto running;
  location running:
    edge tube_1_j32_timer_release_signal_c_reset goto off;
    edge tube_1_j32_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_1_j32_timer_release_signal_c_reset goto off;
end
plant automaton tube_1_matrix_sign_traffic_light:
  location off:
    initial;
    marked;
    edge tube_1_matrix_sign_traffic_light_c_on goto on;
  location on:
    marked false;
    edge tube_1_matrix_sign_traffic_light_c_off goto off;
end
plant automaton tube_1_matrix_sign_free:
  location off:
    initial;
    marked;
    edge tube_1_matrix_sign_free_c_on goto on;
  location on:
    marked false;
    edge tube_1_matrix_sign_free_c_off goto off;
end
plant automaton tube_1_SOS:
  location off:
    initial;
    marked;
    edge tube_1_SOS_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_SOS_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_A_sensor_open:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_A_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_A_sensor_open_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_A_emergency_phone:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_A_emergency_phone_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_A_emergency_phone_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_A_hand_extinguisher:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_A_hand_extinguisher_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_A_hand_extinguisher_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_A_fire_hose:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_A_fire_hose_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_A_fire_hose_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_C_sensor_open:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_C_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_C_sensor_open_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_C_emergency_phone:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_C_emergency_phone_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_C_emergency_phone_u_off goto off;
end
plant automaton tube_1_emergency_cabinet_C_hand_extinguisher:
  location off:
    initial;
    marked;
    edge tube_1_emergency_cabinet_C_hand_extinguisher_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_emergency_cabinet_C_hand_extinguisher_u_off goto off;
end
plant automaton tube_1_smoke_detection:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_1_smoke_detection_u_0 when not(mode = 0) do mode := 0;
    edge tube_1_smoke_detection_u_1 when not(mode = 1) do mode := 1;
    edge tube_1_smoke_detection_u_2 when not(mode = 2) do mode := 2;
    edge tube_1_smoke_detection_u_3 when not(mode = 3) do mode := 3;
    edge tube_1_smoke_detection_u_4 when not(mode = 4) do mode := 4;
    edge tube_1_smoke_detection_u_5 when not(mode = 5) do mode := 5;
    edge tube_1_smoke_detection_u_6 when not(mode = 6) do mode := 6;
    edge tube_1_smoke_detection_u_7 when not(mode = 7) do mode := 7;
    edge tube_1_smoke_detection_u_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_1_ventilation:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_1_ventilation_c_0 when not(mode = 0) do mode := 0;
    edge tube_1_ventilation_c_1 when not(mode = 1) do mode := 1;
    edge tube_1_ventilation_c_2 when not(mode = 2) do mode := 2;
    edge tube_1_ventilation_c_3 when not(mode = 3) do mode := 3;
    edge tube_1_ventilation_c_4 when not(mode = 4) do mode := 4;
    edge tube_1_ventilation_c_5 when not(mode = 5) do mode := 5;
    edge tube_1_ventilation_c_6 when not(mode = 6) do mode := 6;
    edge tube_1_ventilation_c_7 when not(mode = 7) do mode := 7;
    edge tube_1_ventilation_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_1_ventilation_entrance:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_1_ventilation_entrance_c_0 when not(mode = 0) do mode := 0;
    edge tube_1_ventilation_entrance_c_1 when not(mode = 1) do mode := 1;
    edge tube_1_ventilation_entrance_c_2 when not(mode = 2) do mode := 2;
    edge tube_1_ventilation_entrance_c_3 when not(mode = 3) do mode := 3;
    edge tube_1_ventilation_entrance_c_4 when not(mode = 4) do mode := 4;
    edge tube_1_ventilation_entrance_c_5 when not(mode = 5) do mode := 5;
    edge tube_1_ventilation_entrance_c_6 when not(mode = 6) do mode := 6;
    edge tube_1_ventilation_entrance_c_7 when not(mode = 7) do mode := 7;
    edge tube_1_ventilation_entrance_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_1_ventilation_direction:
  location along:
    initial;
    marked;
    edge tube_1_ventilation_direction_c_against goto against;
  location against:
    edge tube_1_ventilation_direction_c_along goto along;
end
plant automaton tube_1_lightsensor:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_1_lightsensor_u_0 when not(mode = 0) do mode := 0;
    edge tube_1_lightsensor_u_1 when not(mode = 1) do mode := 1;
    edge tube_1_lightsensor_u_2 when not(mode = 2) do mode := 2;
    edge tube_1_lightsensor_u_3 when not(mode = 3) do mode := 3;
    edge tube_1_lightsensor_u_4 when not(mode = 4) do mode := 4;
    edge tube_1_lightsensor_u_5 when not(mode = 5) do mode := 5;
    edge tube_1_lightsensor_u_6 when not(mode = 6) do mode := 6;
    edge tube_1_lightsensor_u_7 when not(mode = 7) do mode := 7;
    edge tube_1_lightsensor_u_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_1_lighting:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_1_lighting_c_0 when not(mode = 0) do mode := 0;
    edge tube_1_lighting_c_1 when not(mode = 1) do mode := 1;
    edge tube_1_lighting_c_2 when not(mode = 2) do mode := 2;
    edge tube_1_lighting_c_3 when not(mode = 3) do mode := 3;
    edge tube_1_lighting_c_4 when not(mode = 4) do mode := 4;
    edge tube_1_lighting_c_5 when not(mode = 5) do mode := 5;
    edge tube_1_lighting_c_6 when not(mode = 6) do mode := 6;
    edge tube_1_lighting_c_7 when not(mode = 7) do mode := 7;
    edge tube_1_lighting_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_1_channel:
  location off:
    initial;
    marked;
    edge tube_1_channel_c_1_on goto camera_1;
    edge tube_1_channel_c_2_on goto camera_2;
    edge tube_1_channel_c_3_on goto camera_3;
    edge tube_1_channel_c_4_on goto camera_4;
    edge tube_1_channel_c_5_on goto camera_5;
    edge tube_1_channel_c_6_on goto camera_6;
  location camera_1:
    edge tube_1_channel_c_1_off goto off;
  location camera_2:
    edge tube_1_channel_c_2_off goto off;
  location camera_3:
    edge tube_1_channel_c_3_off goto off;
  location camera_4:
    edge tube_1_channel_c_4_off goto off;
  location camera_5:
    edge tube_1_channel_c_5_off goto off;
  location camera_6:
    edge tube_1_channel_c_6_off goto off;
end
plant automaton tube_1_recorder:
  location off:
    initial;
    marked;
    edge tube_1_recorder_c_on goto on;
  location on:
    marked false;
    edge tube_1_recorder_c_off goto off;
end
plant automaton tube_1_escape_door_sensor_open:
  location off:
    initial;
    marked;
    edge tube_1_escape_door_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_1_escape_door_sensor_open_u_off goto off;
end
plant automaton tube_1_escape_door_sound_beacon:
  location off:
    initial;
    marked;
    edge tube_1_escape_door_sound_beacon_c_on goto on;
  location on:
    marked false;
    edge tube_1_escape_door_sound_beacon_c_off goto off;
end
plant automaton tube_1_escape_door_contour_lighting:
  location off:
    initial;
    marked;
    edge tube_1_escape_door_contour_lighting_c_on goto on;
  location on:
    marked false;
    edge tube_1_escape_door_contour_lighting_c_off goto off;
end
plant automaton tube_1_intercom:
  location off:
    initial;
    marked;
    edge tube_1_intercom_c_on goto on;
  location on:
    marked false;
    edge tube_1_intercom_c_off goto off;
end
plant automaton tube_1_switch_timer_audio:
  location off:
    initial;
    marked;
    edge tube_1_switch_timer_audio_c_on goto on_1;
  location on_1:
    edge tube_1_switch_timer_audio_c_off goto off;
    edge tube_1_switch_timer_audio_u_timeout goto on_2;
  location on_2:
    edge tube_1_switch_timer_audio_c_off goto off;
    edge tube_1_switch_timer_audio_u_timeout goto on_1;
end
plant automaton tube_1_mode:
  location operational:
    initial;
    marked;
    edge tube_1_mode_c_emergency goto emergency;
    edge tube_1_mode_c_recovery goto recovery;
    edge tube_1_mode_c_support goto support;
  location emergency:
    edge tube_1_mode_c_recovery goto recovery;
    edge tube_1_mode_c_operational goto operational;
    edge tube_1_mode_c_support goto support;
  location recovery:
    edge tube_1_mode_c_operational goto operational;
    edge tube_1_mode_c_emergency goto emergency;
    edge tube_1_mode_c_support goto support;
  location support:
    edge tube_1_mode_c_operational goto operational;
    edge tube_1_mode_c_emergency goto emergency;
    edge tube_1_mode_c_recovery goto recovery;
end
plant automaton tube_1_standby:
  location off:
    initial;
    marked;
    edge tube_1_standby_c_on goto on;
  location on:
    marked false;
    edge tube_1_standby_c_off goto off;
end
plant automaton tube_1_evacuation:
  location off:
    initial;
    marked;
    edge tube_1_evacuation_c_on goto on;
  location on:
    marked false;
    edge tube_1_evacuation_c_off goto off;
end
plant automaton tube_1_button_operational_button:
  location:
    initial;
    marked;
    edge tube_1_button_operational_button_u_press;
end
plant automaton tube_1_button_operational_observer:
  location released:
    initial;
    marked;
    edge tube_1_button_operational_button_u_press when tube_1_mode.recovery goto pressed;
    edge tube_1_button_operational_button_u_press when not tube_1_mode.recovery;
  location pressed:
    marked;
    edge tube_1_button_operational_observer_c_done when tube_1_mode.operational goto released;
    edge tube_1_button_operational_button_u_press;
end
plant automaton tube_1_button_evacuation_button:
  location:
    initial;
    marked;
    edge tube_1_button_evacuation_button_u_press;
end
plant automaton tube_1_button_evacuation_observer:
  location released:
    initial;
    marked;
    edge tube_1_button_evacuation_button_u_press when tube_1_mode.emergency and tube_1_evacuation.off goto pressed;
    edge tube_1_button_evacuation_button_u_press when not(tube_1_mode.emergency and tube_1_evacuation.off);
  location pressed:
    marked;
    edge tube_1_button_evacuation_observer_c_done when tube_1_evacuation.on goto released;
    edge tube_1_button_evacuation_button_u_press;
end
plant automaton tube_1_button_recovery_button:
  location:
    initial;
    marked;
    edge tube_1_button_recovery_button_u_press;
end
plant automaton tube_1_button_recovery_observer:
  location released:
    initial;
    marked;
    edge tube_1_button_recovery_button_u_press when tube_1_mode.emergency goto pressed;
    edge tube_1_button_recovery_button_u_press when not tube_1_mode.emergency;
  location pressed:
    marked;
    edge tube_1_button_recovery_observer_c_done when tube_1_mode.recovery goto released;
    edge tube_1_button_recovery_button_u_press;
end
plant automaton tube_2_boom_barrier_1_actuator_up:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_up_c_on goto on;
  location on:
    marked false;
    edge tube_2_boom_barrier_1_actuator_up_c_off goto off;
end
plant automaton tube_2_boom_barrier_1_actuator_down:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_on goto on;
  location on:
    marked false;
    edge tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency goto off;
end
plant automaton tube_2_boom_barrier_1_sensor_open:
  location off:
    initial false;
    marked false;
    edge tube_2_boom_barrier_1_sensor_open_u_on goto on;
  location on:
    initial;
    marked;
    edge tube_2_boom_barrier_1_sensor_open_u_off goto off;
end
plant automaton tube_2_boom_barrier_1_sensor_closed:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_1_sensor_closed_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_boom_barrier_1_sensor_closed_u_off goto off;
end
plant automaton tube_2_boom_barrier_1_physical_relation:
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_sensor_open_u_on when tube_2_boom_barrier_1_actuator_up.on and tube_2_boom_barrier_1_sensor_closed.off;
    edge tube_2_boom_barrier_1_sensor_closed_u_off when tube_2_boom_barrier_1_actuator_up.on;
    edge tube_2_boom_barrier_1_sensor_open_u_off when tube_2_boom_barrier_1_actuator_down.on;
    edge tube_2_boom_barrier_1_sensor_closed_u_on when tube_2_boom_barrier_1_actuator_down.on and tube_2_boom_barrier_1_sensor_open.off;
end
plant automaton tube_2_boom_barrier_1_obstacle_detection:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_1_obstacle_detection_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_boom_barrier_1_obstacle_detection_u_off goto off;
end
plant automaton tube_2_boom_barrier_2_actuator_up:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_2_actuator_up_c_on goto on;
  location on:
    marked false;
    edge tube_2_boom_barrier_2_actuator_up_c_off goto off;
end
plant automaton tube_2_boom_barrier_2_actuator_down:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_2_actuator_down_c_on goto on;
  location on:
    marked false;
    edge tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency goto off;
end
plant automaton tube_2_boom_barrier_2_sensor_open:
  location off:
    initial false;
    marked false;
    edge tube_2_boom_barrier_2_sensor_open_u_on goto on;
  location on:
    initial;
    marked;
    edge tube_2_boom_barrier_2_sensor_open_u_off goto off;
end
plant automaton tube_2_boom_barrier_2_sensor_closed:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_2_sensor_closed_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_boom_barrier_2_sensor_closed_u_off goto off;
end
plant automaton tube_2_boom_barrier_2_physical_relation:
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_2_sensor_open_u_on when tube_2_boom_barrier_2_actuator_up.on and tube_2_boom_barrier_2_sensor_closed.off;
    edge tube_2_boom_barrier_2_sensor_closed_u_off when tube_2_boom_barrier_2_actuator_up.on;
    edge tube_2_boom_barrier_2_sensor_open_u_off when tube_2_boom_barrier_2_actuator_down.on;
    edge tube_2_boom_barrier_2_sensor_closed_u_on when tube_2_boom_barrier_2_actuator_down.on and tube_2_boom_barrier_2_sensor_open.off;
end
plant automaton tube_2_boom_barrier_2_obstacle_detection:
  location off:
    initial;
    marked;
    edge tube_2_boom_barrier_2_obstacle_detection_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_boom_barrier_2_obstacle_detection_u_off goto off;
end
plant automaton tube_2_traffic_light_1_mode:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_1_mode_c_flashing goto flashing;
  location flashing:
    edge tube_2_traffic_light_1_mode_c_off goto off;
    edge tube_2_traffic_light_1_mode_c_yellow goto yellow;
  location yellow:
    edge tube_2_traffic_light_1_mode_c_red goto red;
  location red:
    edge tube_2_traffic_light_1_mode_c_flashing goto flashing;
end
plant automaton tube_2_traffic_light_1_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_1_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_traffic_light_1_release_signal_u_off goto off;
end
plant automaton tube_2_traffic_light_1_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_1_timer_release_signal_c_on goto running;
  location running:
    edge tube_2_traffic_light_1_timer_release_signal_c_reset goto off;
    edge tube_2_traffic_light_1_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_2_traffic_light_1_timer_release_signal_c_reset goto off;
end
plant automaton tube_2_traffic_light_1_relation:
  location:
    initial;
    marked;
    edge tube_2_traffic_light_1_release_signal_u_on when tube_2_traffic_light_1_mode.red and tube_2_traffic_light_1_timer_release_signal.finished;
    edge tube_2_traffic_light_1_release_signal_u_off when not tube_2_traffic_light_1_mode.red;
end
plant automaton tube_2_traffic_light_2_mode:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_2_mode_c_flashing goto flashing;
  location flashing:
    edge tube_2_traffic_light_2_mode_c_off goto off;
    edge tube_2_traffic_light_2_mode_c_yellow goto yellow;
  location yellow:
    edge tube_2_traffic_light_2_mode_c_red goto red;
  location red:
    edge tube_2_traffic_light_2_mode_c_flashing goto flashing;
end
plant automaton tube_2_traffic_light_2_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_2_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_traffic_light_2_release_signal_u_off goto off;
end
plant automaton tube_2_traffic_light_2_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_2_timer_release_signal_c_on goto running;
  location running:
    edge tube_2_traffic_light_2_timer_release_signal_c_reset goto off;
    edge tube_2_traffic_light_2_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_2_traffic_light_2_timer_release_signal_c_reset goto off;
end
plant automaton tube_2_traffic_light_2_relation:
  location:
    initial;
    marked;
    edge tube_2_traffic_light_2_release_signal_u_on when tube_2_traffic_light_2_mode.red and tube_2_traffic_light_2_timer_release_signal.finished;
    edge tube_2_traffic_light_2_release_signal_u_off when not tube_2_traffic_light_2_mode.red;
end
plant automaton tube_2_traffic_light_3_mode:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_3_mode_c_flashing goto flashing;
  location flashing:
    edge tube_2_traffic_light_3_mode_c_off goto off;
    edge tube_2_traffic_light_3_mode_c_yellow goto yellow;
  location yellow:
    edge tube_2_traffic_light_3_mode_c_red goto red;
  location red:
    edge tube_2_traffic_light_3_mode_c_flashing goto flashing;
end
plant automaton tube_2_traffic_light_3_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_3_release_signal_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_traffic_light_3_release_signal_u_off goto off;
end
plant automaton tube_2_traffic_light_3_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_traffic_light_3_timer_release_signal_c_on goto running;
  location running:
    edge tube_2_traffic_light_3_timer_release_signal_c_reset goto off;
    edge tube_2_traffic_light_3_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_2_traffic_light_3_timer_release_signal_c_reset goto off;
end
plant automaton tube_2_traffic_light_3_relation:
  location:
    initial;
    marked;
    edge tube_2_traffic_light_3_release_signal_u_on when tube_2_traffic_light_3_mode.red and tube_2_traffic_light_3_timer_release_signal.finished;
    edge tube_2_traffic_light_3_release_signal_u_off when not tube_2_traffic_light_3_mode.red;
end
plant automaton tube_2_j32_mode:
  location off:
    initial;
    marked;
    edge tube_2_j32_mode_c_on goto on;
  location on:
    marked false;
    edge tube_2_j32_mode_c_off goto off;
end
plant automaton tube_2_j32_timer_release_signal:
  location off:
    initial;
    marked;
    edge tube_2_j32_timer_release_signal_c_on goto running;
  location running:
    edge tube_2_j32_timer_release_signal_c_reset goto off;
    edge tube_2_j32_timer_release_signal_u_timeout goto finished;
  location finished:
    edge tube_2_j32_timer_release_signal_c_reset goto off;
end
plant automaton tube_2_matrix_sign_traffic_light:
  location off:
    initial;
    marked;
    edge tube_2_matrix_sign_traffic_light_c_on goto on;
  location on:
    marked false;
    edge tube_2_matrix_sign_traffic_light_c_off goto off;
end
plant automaton tube_2_matrix_sign_free:
  location off:
    initial;
    marked;
    edge tube_2_matrix_sign_free_c_on goto on;
  location on:
    marked false;
    edge tube_2_matrix_sign_free_c_off goto off;
end
plant automaton tube_2_SOS:
  location off:
    initial;
    marked;
    edge tube_2_SOS_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_SOS_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_A_sensor_open:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_A_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_A_sensor_open_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_A_emergency_phone:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_A_emergency_phone_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_A_emergency_phone_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_A_hand_extinguisher:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_A_hand_extinguisher_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_A_hand_extinguisher_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_A_fire_hose:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_A_fire_hose_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_A_fire_hose_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_C_sensor_open:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_C_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_C_sensor_open_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_C_emergency_phone:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_C_emergency_phone_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_C_emergency_phone_u_off goto off;
end
plant automaton tube_2_emergency_cabinet_C_hand_extinguisher:
  location off:
    initial;
    marked;
    edge tube_2_emergency_cabinet_C_hand_extinguisher_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_emergency_cabinet_C_hand_extinguisher_u_off goto off;
end
plant automaton tube_2_smoke_detection:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_2_smoke_detection_u_0 when not(mode = 0) do mode := 0;
    edge tube_2_smoke_detection_u_1 when not(mode = 1) do mode := 1;
    edge tube_2_smoke_detection_u_2 when not(mode = 2) do mode := 2;
    edge tube_2_smoke_detection_u_3 when not(mode = 3) do mode := 3;
    edge tube_2_smoke_detection_u_4 when not(mode = 4) do mode := 4;
    edge tube_2_smoke_detection_u_5 when not(mode = 5) do mode := 5;
    edge tube_2_smoke_detection_u_6 when not(mode = 6) do mode := 6;
    edge tube_2_smoke_detection_u_7 when not(mode = 7) do mode := 7;
    edge tube_2_smoke_detection_u_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_2_ventilation:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_2_ventilation_c_0 when not(mode = 0) do mode := 0;
    edge tube_2_ventilation_c_1 when not(mode = 1) do mode := 1;
    edge tube_2_ventilation_c_2 when not(mode = 2) do mode := 2;
    edge tube_2_ventilation_c_3 when not(mode = 3) do mode := 3;
    edge tube_2_ventilation_c_4 when not(mode = 4) do mode := 4;
    edge tube_2_ventilation_c_5 when not(mode = 5) do mode := 5;
    edge tube_2_ventilation_c_6 when not(mode = 6) do mode := 6;
    edge tube_2_ventilation_c_7 when not(mode = 7) do mode := 7;
    edge tube_2_ventilation_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_2_ventilation_entrance:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_2_ventilation_entrance_c_0 when not(mode = 0) do mode := 0;
    edge tube_2_ventilation_entrance_c_1 when not(mode = 1) do mode := 1;
    edge tube_2_ventilation_entrance_c_2 when not(mode = 2) do mode := 2;
    edge tube_2_ventilation_entrance_c_3 when not(mode = 3) do mode := 3;
    edge tube_2_ventilation_entrance_c_4 when not(mode = 4) do mode := 4;
    edge tube_2_ventilation_entrance_c_5 when not(mode = 5) do mode := 5;
    edge tube_2_ventilation_entrance_c_6 when not(mode = 6) do mode := 6;
    edge tube_2_ventilation_entrance_c_7 when not(mode = 7) do mode := 7;
    edge tube_2_ventilation_entrance_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_2_ventilation_direction:
  location along:
    initial;
    marked;
    edge tube_2_ventilation_direction_c_against goto against;
  location against:
    edge tube_2_ventilation_direction_c_along goto along;
end
plant automaton tube_2_lightsensor:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_2_lightsensor_u_0 when not(mode = 0) do mode := 0;
    edge tube_2_lightsensor_u_1 when not(mode = 1) do mode := 1;
    edge tube_2_lightsensor_u_2 when not(mode = 2) do mode := 2;
    edge tube_2_lightsensor_u_3 when not(mode = 3) do mode := 3;
    edge tube_2_lightsensor_u_4 when not(mode = 4) do mode := 4;
    edge tube_2_lightsensor_u_5 when not(mode = 5) do mode := 5;
    edge tube_2_lightsensor_u_6 when not(mode = 6) do mode := 6;
    edge tube_2_lightsensor_u_7 when not(mode = 7) do mode := 7;
    edge tube_2_lightsensor_u_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_2_lighting:
  disc int[0..8] mode = 0;
  location:
    initial;
    marked;
    edge tube_2_lighting_c_0 when not(mode = 0) do mode := 0;
    edge tube_2_lighting_c_1 when not(mode = 1) do mode := 1;
    edge tube_2_lighting_c_2 when not(mode = 2) do mode := 2;
    edge tube_2_lighting_c_3 when not(mode = 3) do mode := 3;
    edge tube_2_lighting_c_4 when not(mode = 4) do mode := 4;
    edge tube_2_lighting_c_5 when not(mode = 5) do mode := 5;
    edge tube_2_lighting_c_6 when not(mode = 6) do mode := 6;
    edge tube_2_lighting_c_7 when not(mode = 7) do mode := 7;
    edge tube_2_lighting_c_8 when not(mode = 8) do mode := 8;
end
plant automaton tube_2_channel:
  location off:
    initial;
    marked;
    edge tube_2_channel_c_1_on goto camera_1;
    edge tube_2_channel_c_2_on goto camera_2;
    edge tube_2_channel_c_3_on goto camera_3;
    edge tube_2_channel_c_4_on goto camera_4;
    edge tube_2_channel_c_5_on goto camera_5;
    edge tube_2_channel_c_6_on goto camera_6;
  location camera_1:
    edge tube_2_channel_c_1_off goto off;
  location camera_2:
    edge tube_2_channel_c_2_off goto off;
  location camera_3:
    edge tube_2_channel_c_3_off goto off;
  location camera_4:
    edge tube_2_channel_c_4_off goto off;
  location camera_5:
    edge tube_2_channel_c_5_off goto off;
  location camera_6:
    edge tube_2_channel_c_6_off goto off;
end
plant automaton tube_2_recorder:
  location off:
    initial;
    marked;
    edge tube_2_recorder_c_on goto on;
  location on:
    marked false;
    edge tube_2_recorder_c_off goto off;
end
plant automaton tube_2_escape_door_sensor_open:
  location off:
    initial;
    marked;
    edge tube_2_escape_door_sensor_open_u_on goto on;
  location on:
    initial not true;
    marked false;
    edge tube_2_escape_door_sensor_open_u_off goto off;
end
plant automaton tube_2_escape_door_sound_beacon:
  location off:
    initial;
    marked;
    edge tube_2_escape_door_sound_beacon_c_on goto on;
  location on:
    marked false;
    edge tube_2_escape_door_sound_beacon_c_off goto off;
end
plant automaton tube_2_escape_door_contour_lighting:
  location off:
    initial;
    marked;
    edge tube_2_escape_door_contour_lighting_c_on goto on;
  location on:
    marked false;
    edge tube_2_escape_door_contour_lighting_c_off goto off;
end
plant automaton tube_2_intercom:
  location off:
    initial;
    marked;
    edge tube_2_intercom_c_on goto on;
  location on:
    marked false;
    edge tube_2_intercom_c_off goto off;
end
plant automaton tube_2_switch_timer_audio:
  location off:
    initial;
    marked;
    edge tube_2_switch_timer_audio_c_on goto on_1;
  location on_1:
    edge tube_2_switch_timer_audio_c_off goto off;
    edge tube_2_switch_timer_audio_u_timeout goto on_2;
  location on_2:
    edge tube_2_switch_timer_audio_c_off goto off;
    edge tube_2_switch_timer_audio_u_timeout goto on_1;
end
plant automaton tube_2_mode:
  location operational:
    initial;
    marked;
    edge tube_2_mode_c_emergency goto emergency;
    edge tube_2_mode_c_recovery goto recovery;
    edge tube_2_mode_c_support goto support;
  location emergency:
    edge tube_2_mode_c_recovery goto recovery;
    edge tube_2_mode_c_operational goto operational;
    edge tube_2_mode_c_support goto support;
  location recovery:
    edge tube_2_mode_c_operational goto operational;
    edge tube_2_mode_c_emergency goto emergency;
    edge tube_2_mode_c_support goto support;
  location support:
    edge tube_2_mode_c_operational goto operational;
    edge tube_2_mode_c_emergency goto emergency;
    edge tube_2_mode_c_recovery goto recovery;
end
plant automaton tube_2_standby:
  location off:
    initial;
    marked;
    edge tube_2_standby_c_on goto on;
  location on:
    marked false;
    edge tube_2_standby_c_off goto off;
end
plant automaton tube_2_evacuation:
  location off:
    initial;
    marked;
    edge tube_2_evacuation_c_on goto on;
  location on:
    marked false;
    edge tube_2_evacuation_c_off goto off;
end
plant automaton tube_2_button_operational_button:
  location:
    initial;
    marked;
    edge tube_2_button_operational_button_u_press;
end
plant automaton tube_2_button_operational_observer:
  location released:
    initial;
    marked;
    edge tube_2_button_operational_button_u_press when tube_2_mode.recovery goto pressed;
    edge tube_2_button_operational_button_u_press when not tube_2_mode.recovery;
  location pressed:
    marked;
    edge tube_2_button_operational_observer_c_done when tube_2_mode.operational goto released;
    edge tube_2_button_operational_button_u_press;
end
plant automaton tube_2_button_evacuation_button:
  location:
    initial;
    marked;
    edge tube_2_button_evacuation_button_u_press;
end
plant automaton tube_2_button_evacuation_observer:
  location released:
    initial;
    marked;
    edge tube_2_button_evacuation_button_u_press when tube_2_mode.emergency and tube_2_evacuation.off goto pressed;
    edge tube_2_button_evacuation_button_u_press when not(tube_2_mode.emergency and tube_2_evacuation.off);
  location pressed:
    marked;
    edge tube_2_button_evacuation_observer_c_done when tube_2_evacuation.on goto released;
    edge tube_2_button_evacuation_button_u_press;
end
plant automaton tube_2_button_recovery_button:
  location:
    initial;
    marked;
    edge tube_2_button_recovery_button_u_press;
end
plant automaton tube_2_button_recovery_observer:
  location released:
    initial;
    marked;
    edge tube_2_button_recovery_button_u_press when tube_2_mode.emergency goto pressed;
    edge tube_2_button_recovery_button_u_press when not tube_2_mode.emergency;
  location pressed:
    marked;
    edge tube_2_button_recovery_observer_c_done when tube_2_mode.recovery goto released;
    edge tube_2_button_recovery_button_u_press;
end
plant automaton middle_tunnel_channel_pressure:
  location off:
    initial;
    marked;
    edge middle_tunnel_channel_pressure_c_left goto left;
    edge middle_tunnel_channel_pressure_c_right goto right;
  location left:
    edge middle_tunnel_channel_pressure_c_off goto off;
    edge middle_tunnel_channel_pressure_c_right goto right;
  location right:
    edge middle_tunnel_channel_pressure_c_off goto off;
    edge middle_tunnel_channel_pressure_c_left goto left;
end
plant automaton middle_tunnel_channel_lighting:
  location off:
    initial;
    marked;
    edge middle_tunnel_channel_lighting_c_on goto on;
  location on:
    marked false;
    edge middle_tunnel_channel_lighting_c_off goto off;
end
plant automaton middle_tunnel_channel_dynamic_escaperoute_indication:
  location off:
    initial;
    marked;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_upward goto upward;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_downward goto downward;
  location upward:
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_off goto off;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_downward goto downward;
  location downward:
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_off goto off;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_upward goto upward;
end
plant automaton middle_tunnel_channel_intercom:
  location off:
    initial;
    marked;
    edge middle_tunnel_channel_intercom_c_on goto on;
  location on:
    marked false;
    edge middle_tunnel_channel_intercom_c_off goto off;
end
supervisor automaton sup1:
  alphabet tube_1_switch_timer_audio_c_on, tube_1_switch_timer_audio_c_off, tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_standby_c_on, tube_1_standby_c_off, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done, tube_2_switch_timer_audio_c_on, tube_2_switch_timer_audio_c_off, tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_standby_c_on, tube_2_standby_c_off, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done, middle_tunnel_channel_pressure_c_left, middle_tunnel_channel_pressure_c_right, middle_tunnel_channel_pressure_c_off, middle_tunnel_channel_lighting_c_on, middle_tunnel_channel_lighting_c_off, middle_tunnel_channel_dynamic_escaperoute_indication_c_upward, middle_tunnel_channel_dynamic_escaperoute_indication_c_downward, middle_tunnel_channel_dynamic_escaperoute_indication_c_off, middle_tunnel_channel_intercom_c_on, middle_tunnel_channel_intercom_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_downward when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_off when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_upward when true;
    edge middle_tunnel_channel_intercom_c_off when true;
    edge middle_tunnel_channel_intercom_c_on when true;
    edge middle_tunnel_channel_lighting_c_off when true;
    edge middle_tunnel_channel_lighting_c_on when true;
    edge middle_tunnel_channel_pressure_c_left when true;
    edge middle_tunnel_channel_pressure_c_off when true;
    edge middle_tunnel_channel_pressure_c_right when true;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
    edge tube_1_standby_c_off when true;
    edge tube_1_standby_c_on when true;
    edge tube_1_switch_timer_audio_c_off when true;
    edge tube_1_switch_timer_audio_c_on when true;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
    edge tube_2_standby_c_off when true;
    edge tube_2_standby_c_on when true;
    edge tube_2_switch_timer_audio_c_off when true;
    edge tube_2_switch_timer_audio_c_on when true;
end
supervisor automaton sup2:
  alphabet tube_1_boom_barrier_1_actuator_up_c_on, tube_1_boom_barrier_1_actuator_up_c_off, tube_1_boom_barrier_1_actuator_down_c_on, tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency, tube_1_boom_barrier_2_actuator_up_c_on, tube_1_boom_barrier_2_actuator_up_c_off, tube_1_boom_barrier_2_actuator_down_c_on, tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency, tube_1_traffic_light_1_mode_c_flashing, tube_1_traffic_light_1_mode_c_off, tube_1_traffic_light_1_mode_c_yellow, tube_1_traffic_light_1_mode_c_red, tube_1_traffic_light_1_timer_release_signal_c_on, tube_1_traffic_light_1_timer_release_signal_c_reset, tube_1_traffic_light_2_mode_c_flashing, tube_1_traffic_light_2_mode_c_off, tube_1_traffic_light_2_mode_c_yellow, tube_1_traffic_light_2_mode_c_red, tube_1_traffic_light_2_timer_release_signal_c_on, tube_1_traffic_light_2_timer_release_signal_c_reset, tube_1_traffic_light_3_mode_c_flashing, tube_1_traffic_light_3_mode_c_off, tube_1_traffic_light_3_mode_c_yellow, tube_1_traffic_light_3_mode_c_red, tube_1_traffic_light_3_timer_release_signal_c_on, tube_1_traffic_light_3_timer_release_signal_c_reset, tube_1_j32_mode_c_on, tube_1_j32_mode_c_off, tube_1_matrix_sign_traffic_light_c_on, tube_1_matrix_sign_traffic_light_c_off, tube_1_channel_c_1_on, tube_1_channel_c_2_on, tube_1_channel_c_3_on, tube_1_channel_c_4_on, tube_1_channel_c_5_on, tube_1_channel_c_6_on, tube_1_channel_c_1_off, tube_1_channel_c_2_off, tube_1_channel_c_3_off, tube_1_channel_c_4_off, tube_1_channel_c_5_off, tube_1_channel_c_6_off, tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_off when true;
    edge tube_1_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_1_actuator_down_c_on when true;
    edge tube_1_boom_barrier_1_actuator_up_c_off when true;
    edge tube_1_boom_barrier_1_actuator_up_c_on when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_2_actuator_down_c_on when true;
    edge tube_1_boom_barrier_2_actuator_up_c_off when true;
    edge tube_1_boom_barrier_2_actuator_up_c_on when true;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_channel_c_1_off when true;
    edge tube_1_channel_c_1_on when true;
    edge tube_1_channel_c_2_off when true;
    edge tube_1_channel_c_2_on when true;
    edge tube_1_channel_c_3_off when true;
    edge tube_1_channel_c_3_on when true;
    edge tube_1_channel_c_4_off when true;
    edge tube_1_channel_c_4_on when true;
    edge tube_1_channel_c_5_off when true;
    edge tube_1_channel_c_5_on when true;
    edge tube_1_channel_c_6_off when true;
    edge tube_1_channel_c_6_on when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_j32_mode_c_off when true;
    edge tube_1_j32_mode_c_on when true;
    edge tube_1_matrix_sign_traffic_light_c_off when true;
    edge tube_1_matrix_sign_traffic_light_c_on when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
    edge tube_1_traffic_light_1_mode_c_flashing when true;
    edge tube_1_traffic_light_1_mode_c_off when true;
    edge tube_1_traffic_light_1_mode_c_red when true;
    edge tube_1_traffic_light_1_mode_c_yellow when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_2_mode_c_flashing when true;
    edge tube_1_traffic_light_2_mode_c_off when true;
    edge tube_1_traffic_light_2_mode_c_red when true;
    edge tube_1_traffic_light_2_mode_c_yellow when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_3_mode_c_flashing when true;
    edge tube_1_traffic_light_3_mode_c_off when true;
    edge tube_1_traffic_light_3_mode_c_red when true;
    edge tube_1_traffic_light_3_mode_c_yellow when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup3:
  alphabet tube_1_boom_barrier_1_actuator_up_c_on, tube_1_boom_barrier_1_actuator_up_c_off, tube_1_boom_barrier_1_actuator_down_c_on, tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency, tube_1_boom_barrier_2_actuator_up_c_on, tube_1_boom_barrier_2_actuator_up_c_off, tube_1_boom_barrier_2_actuator_down_c_on, tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency, tube_1_channel_c_1_on, tube_1_channel_c_2_on, tube_1_channel_c_3_on, tube_1_channel_c_4_on, tube_1_channel_c_5_on, tube_1_channel_c_6_on, tube_1_channel_c_1_off, tube_1_channel_c_2_off, tube_1_channel_c_3_off, tube_1_channel_c_4_off, tube_1_channel_c_5_off, tube_1_channel_c_6_off;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_off when true;
    edge tube_1_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_1_actuator_down_c_on when true;
    edge tube_1_boom_barrier_1_actuator_up_c_off when true;
    edge tube_1_boom_barrier_1_actuator_up_c_on when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_2_actuator_down_c_on when true;
    edge tube_1_boom_barrier_2_actuator_up_c_off when true;
    edge tube_1_boom_barrier_2_actuator_up_c_on when true;
    edge tube_1_channel_c_1_off when true;
    edge tube_1_channel_c_1_on when true;
    edge tube_1_channel_c_2_off when true;
    edge tube_1_channel_c_2_on when true;
    edge tube_1_channel_c_3_off when true;
    edge tube_1_channel_c_3_on when true;
    edge tube_1_channel_c_4_off when true;
    edge tube_1_channel_c_4_on when true;
    edge tube_1_channel_c_5_off when true;
    edge tube_1_channel_c_5_on when true;
    edge tube_1_channel_c_6_off when true;
    edge tube_1_channel_c_6_on when true;
end
supervisor automaton sup4:
  alphabet tube_1_boom_barrier_1_actuator_up_c_on, tube_1_boom_barrier_1_actuator_up_c_off, tube_1_boom_barrier_1_actuator_down_c_on, tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency, tube_1_boom_barrier_2_actuator_up_c_on, tube_1_boom_barrier_2_actuator_up_c_off, tube_1_boom_barrier_2_actuator_down_c_on, tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency, tube_1_traffic_light_1_mode_c_flashing, tube_1_traffic_light_1_mode_c_off, tube_1_traffic_light_1_mode_c_yellow, tube_1_traffic_light_1_mode_c_red, tube_1_traffic_light_1_timer_release_signal_c_on, tube_1_traffic_light_1_timer_release_signal_c_reset, tube_1_traffic_light_2_mode_c_flashing, tube_1_traffic_light_2_mode_c_off, tube_1_traffic_light_2_mode_c_yellow, tube_1_traffic_light_2_mode_c_red, tube_1_traffic_light_2_timer_release_signal_c_on, tube_1_traffic_light_2_timer_release_signal_c_reset, tube_1_traffic_light_3_mode_c_flashing, tube_1_traffic_light_3_mode_c_off, tube_1_traffic_light_3_mode_c_yellow, tube_1_traffic_light_3_mode_c_red, tube_1_traffic_light_3_timer_release_signal_c_on, tube_1_traffic_light_3_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_off when true;
    edge tube_1_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_1_actuator_down_c_on when true;
    edge tube_1_boom_barrier_1_actuator_up_c_off when true;
    edge tube_1_boom_barrier_1_actuator_up_c_on when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_2_actuator_down_c_on when true;
    edge tube_1_boom_barrier_2_actuator_up_c_off when true;
    edge tube_1_boom_barrier_2_actuator_up_c_on when true;
    edge tube_1_traffic_light_1_mode_c_flashing when true;
    edge tube_1_traffic_light_1_mode_c_off when true;
    edge tube_1_traffic_light_1_mode_c_red when true;
    edge tube_1_traffic_light_1_mode_c_yellow when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_2_mode_c_flashing when true;
    edge tube_1_traffic_light_2_mode_c_off when true;
    edge tube_1_traffic_light_2_mode_c_red when true;
    edge tube_1_traffic_light_2_mode_c_yellow when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_3_mode_c_flashing when true;
    edge tube_1_traffic_light_3_mode_c_off when true;
    edge tube_1_traffic_light_3_mode_c_red when true;
    edge tube_1_traffic_light_3_mode_c_yellow when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup5:
  alphabet tube_1_boom_barrier_1_actuator_up_c_on, tube_1_boom_barrier_1_actuator_up_c_off, tube_1_boom_barrier_1_actuator_down_c_on, tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_off when true;
    edge tube_1_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_1_actuator_down_c_on when true;
    edge tube_1_boom_barrier_1_actuator_up_c_off when true;
    edge tube_1_boom_barrier_1_actuator_up_c_on when true;
end
supervisor automaton sup6:
  alphabet tube_1_boom_barrier_1_actuator_up_c_on, tube_1_boom_barrier_1_actuator_up_c_off, tube_1_boom_barrier_1_actuator_down_c_on, tube_1_boom_barrier_1_actuator_down_c_off, tube_1_boom_barrier_1_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_1_actuator_down_c_off when true;
    edge tube_1_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_1_actuator_down_c_on when true;
    edge tube_1_boom_barrier_1_actuator_up_c_off when true;
    edge tube_1_boom_barrier_1_actuator_up_c_on when true;
end
supervisor automaton sup8:
  alphabet tube_1_boom_barrier_2_actuator_up_c_on, tube_1_boom_barrier_2_actuator_up_c_off, tube_1_boom_barrier_2_actuator_down_c_on, tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_2_actuator_down_c_off when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_2_actuator_down_c_on when true;
    edge tube_1_boom_barrier_2_actuator_up_c_off when true;
    edge tube_1_boom_barrier_2_actuator_up_c_on when true;
end
supervisor automaton sup9:
  alphabet tube_1_boom_barrier_2_actuator_up_c_on, tube_1_boom_barrier_2_actuator_up_c_off, tube_1_boom_barrier_2_actuator_down_c_on, tube_1_boom_barrier_2_actuator_down_c_off, tube_1_boom_barrier_2_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_1_boom_barrier_2_actuator_down_c_off when true;
    edge tube_1_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_1_boom_barrier_2_actuator_down_c_on when true;
    edge tube_1_boom_barrier_2_actuator_up_c_off when true;
    edge tube_1_boom_barrier_2_actuator_up_c_on when true;
end
supervisor automaton sup11:
  alphabet tube_1_traffic_light_1_mode_c_flashing, tube_1_traffic_light_1_mode_c_off, tube_1_traffic_light_1_mode_c_yellow, tube_1_traffic_light_1_mode_c_red, tube_1_traffic_light_1_timer_release_signal_c_on, tube_1_traffic_light_1_timer_release_signal_c_reset, tube_1_traffic_light_2_mode_c_flashing, tube_1_traffic_light_2_mode_c_off, tube_1_traffic_light_2_mode_c_yellow, tube_1_traffic_light_2_mode_c_red, tube_1_traffic_light_2_timer_release_signal_c_on, tube_1_traffic_light_2_timer_release_signal_c_reset, tube_1_traffic_light_3_mode_c_flashing, tube_1_traffic_light_3_mode_c_off, tube_1_traffic_light_3_mode_c_yellow, tube_1_traffic_light_3_mode_c_red, tube_1_traffic_light_3_timer_release_signal_c_on, tube_1_traffic_light_3_timer_release_signal_c_reset, tube_1_j32_mode_c_on, tube_1_j32_mode_c_off, tube_1_j32_timer_release_signal_c_on, tube_1_j32_timer_release_signal_c_reset, tube_1_matrix_sign_traffic_light_c_on, tube_1_matrix_sign_traffic_light_c_off;
  location:
    initial;
    marked;
    edge tube_1_j32_mode_c_off when true;
    edge tube_1_j32_mode_c_on when true;
    edge tube_1_j32_timer_release_signal_c_on when true;
    edge tube_1_j32_timer_release_signal_c_reset when true;
    edge tube_1_matrix_sign_traffic_light_c_off when true;
    edge tube_1_matrix_sign_traffic_light_c_on when true;
    edge tube_1_traffic_light_1_mode_c_flashing when true;
    edge tube_1_traffic_light_1_mode_c_off when true;
    edge tube_1_traffic_light_1_mode_c_red when true;
    edge tube_1_traffic_light_1_mode_c_yellow when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_2_mode_c_flashing when true;
    edge tube_1_traffic_light_2_mode_c_off when true;
    edge tube_1_traffic_light_2_mode_c_red when true;
    edge tube_1_traffic_light_2_mode_c_yellow when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_1_traffic_light_3_mode_c_flashing when true;
    edge tube_1_traffic_light_3_mode_c_off when true;
    edge tube_1_traffic_light_3_mode_c_red when true;
    edge tube_1_traffic_light_3_mode_c_yellow when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup12:
  alphabet tube_1_traffic_light_1_mode_c_flashing, tube_1_traffic_light_1_mode_c_off, tube_1_traffic_light_1_mode_c_yellow, tube_1_traffic_light_1_mode_c_red, tube_1_traffic_light_1_timer_release_signal_c_on, tube_1_traffic_light_1_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_1_traffic_light_1_mode_c_flashing when true;
    edge tube_1_traffic_light_1_mode_c_off when true;
    edge tube_1_traffic_light_1_mode_c_red when true;
    edge tube_1_traffic_light_1_mode_c_yellow when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_1_timer_release_signal_c_reset when true;
end
supervisor automaton sup13:
  alphabet tube_1_traffic_light_2_mode_c_flashing, tube_1_traffic_light_2_mode_c_off, tube_1_traffic_light_2_mode_c_yellow, tube_1_traffic_light_2_mode_c_red, tube_1_traffic_light_2_timer_release_signal_c_on, tube_1_traffic_light_2_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_1_traffic_light_2_mode_c_flashing when true;
    edge tube_1_traffic_light_2_mode_c_off when true;
    edge tube_1_traffic_light_2_mode_c_red when true;
    edge tube_1_traffic_light_2_mode_c_yellow when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_2_timer_release_signal_c_reset when true;
end
supervisor automaton sup14:
  alphabet tube_1_traffic_light_3_mode_c_flashing, tube_1_traffic_light_3_mode_c_off, tube_1_traffic_light_3_mode_c_yellow, tube_1_traffic_light_3_mode_c_red, tube_1_traffic_light_3_timer_release_signal_c_on, tube_1_traffic_light_3_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_1_traffic_light_3_mode_c_flashing when true;
    edge tube_1_traffic_light_3_mode_c_off when true;
    edge tube_1_traffic_light_3_mode_c_red when true;
    edge tube_1_traffic_light_3_mode_c_yellow when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_1_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup22:
  alphabet tube_1_channel_c_1_on, tube_1_channel_c_2_on, tube_1_channel_c_3_on, tube_1_channel_c_4_on, tube_1_channel_c_5_on, tube_1_channel_c_6_on, tube_1_channel_c_1_off, tube_1_channel_c_2_off, tube_1_channel_c_3_off, tube_1_channel_c_4_off, tube_1_channel_c_5_off, tube_1_channel_c_6_off;
  location:
    initial;
    marked;
    edge tube_1_channel_c_1_off when true;
    edge tube_1_channel_c_1_on when true;
    edge tube_1_channel_c_2_off when true;
    edge tube_1_channel_c_2_on when true;
    edge tube_1_channel_c_3_off when true;
    edge tube_1_channel_c_3_on when true;
    edge tube_1_channel_c_4_off when true;
    edge tube_1_channel_c_4_on when true;
    edge tube_1_channel_c_5_off when true;
    edge tube_1_channel_c_5_on when true;
    edge tube_1_channel_c_6_off when true;
    edge tube_1_channel_c_6_on when true;
end
supervisor automaton sup26:
  alphabet tube_1_ventilation_c_0, tube_1_ventilation_c_1, tube_1_ventilation_c_2, tube_1_ventilation_c_3, tube_1_ventilation_c_4, tube_1_ventilation_c_5, tube_1_ventilation_c_6, tube_1_ventilation_c_7, tube_1_ventilation_c_8, tube_1_ventilation_entrance_c_0, tube_1_ventilation_entrance_c_1, tube_1_ventilation_entrance_c_2, tube_1_ventilation_entrance_c_3, tube_1_ventilation_entrance_c_4, tube_1_ventilation_entrance_c_5, tube_1_ventilation_entrance_c_6, tube_1_ventilation_entrance_c_7, tube_1_ventilation_entrance_c_8, tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_standby_c_on, tube_1_standby_c_off, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
    edge tube_1_standby_c_off when true;
    edge tube_1_standby_c_on when true;
    edge tube_1_ventilation_c_0 when true;
    edge tube_1_ventilation_c_1 when true;
    edge tube_1_ventilation_c_2 when true;
    edge tube_1_ventilation_c_3 when true;
    edge tube_1_ventilation_c_4 when true;
    edge tube_1_ventilation_c_5 when true;
    edge tube_1_ventilation_c_6 when true;
    edge tube_1_ventilation_c_7 when true;
    edge tube_1_ventilation_c_8 when true;
    edge tube_1_ventilation_entrance_c_0 when true;
    edge tube_1_ventilation_entrance_c_1 when true;
    edge tube_1_ventilation_entrance_c_2 when true;
    edge tube_1_ventilation_entrance_c_3 when true;
    edge tube_1_ventilation_entrance_c_4 when true;
    edge tube_1_ventilation_entrance_c_5 when true;
    edge tube_1_ventilation_entrance_c_6 when true;
    edge tube_1_ventilation_entrance_c_7 when true;
    edge tube_1_ventilation_entrance_c_8 when true;
end
supervisor automaton sup27:
  alphabet tube_1_lighting_c_0, tube_1_lighting_c_1, tube_1_lighting_c_2, tube_1_lighting_c_3, tube_1_lighting_c_4, tube_1_lighting_c_5, tube_1_lighting_c_6, tube_1_lighting_c_7, tube_1_lighting_c_8, tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_lighting_c_0 when true;
    edge tube_1_lighting_c_1 when true;
    edge tube_1_lighting_c_2 when true;
    edge tube_1_lighting_c_3 when true;
    edge tube_1_lighting_c_4 when true;
    edge tube_1_lighting_c_5 when true;
    edge tube_1_lighting_c_6 when true;
    edge tube_1_lighting_c_7 when true;
    edge tube_1_lighting_c_8 when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
end
supervisor automaton sup28:
  alphabet tube_1_lighting_c_0, tube_1_lighting_c_1, tube_1_lighting_c_2, tube_1_lighting_c_3, tube_1_lighting_c_4, tube_1_lighting_c_5, tube_1_lighting_c_6, tube_1_lighting_c_7, tube_1_lighting_c_8;
  location:
    initial;
    marked;
    edge tube_1_lighting_c_0 when true;
    edge tube_1_lighting_c_1 when true;
    edge tube_1_lighting_c_2 when true;
    edge tube_1_lighting_c_3 when true;
    edge tube_1_lighting_c_4 when true;
    edge tube_1_lighting_c_5 when true;
    edge tube_1_lighting_c_6 when true;
    edge tube_1_lighting_c_7 when true;
    edge tube_1_lighting_c_8 when true;
end
supervisor automaton sup31:
  alphabet tube_1_matrix_sign_free_c_on, tube_1_matrix_sign_free_c_off, tube_1_ventilation_direction_c_against, tube_1_ventilation_direction_c_along, tube_1_recorder_c_on, tube_1_recorder_c_off, tube_1_escape_door_contour_lighting_c_on, tube_1_escape_door_contour_lighting_c_off, tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_escape_door_contour_lighting_c_off when true;
    edge tube_1_escape_door_contour_lighting_c_on when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_matrix_sign_free_c_off when true;
    edge tube_1_matrix_sign_free_c_on when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
    edge tube_1_recorder_c_off when true;
    edge tube_1_recorder_c_on when true;
    edge tube_1_ventilation_direction_c_against when true;
    edge tube_1_ventilation_direction_c_along when true;
end
supervisor automaton sup36:
  alphabet tube_1_mode_c_emergency, tube_1_mode_c_recovery, tube_1_mode_c_support, tube_1_mode_c_operational, tube_1_evacuation_c_on, tube_1_evacuation_c_off, tube_1_button_operational_observer_c_done, tube_1_button_evacuation_observer_c_done, tube_1_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_1_button_evacuation_observer_c_done when true;
    edge tube_1_button_operational_observer_c_done when true;
    edge tube_1_button_recovery_observer_c_done when true;
    edge tube_1_evacuation_c_off when true;
    edge tube_1_evacuation_c_on when true;
    edge tube_1_mode_c_emergency when true;
    edge tube_1_mode_c_operational when true;
    edge tube_1_mode_c_recovery when true;
    edge tube_1_mode_c_support when true;
end
supervisor automaton sup37:
  alphabet tube_1_standby_c_on, tube_1_standby_c_off;
  location:
    initial;
    marked;
    edge tube_1_standby_c_off when true;
    edge tube_1_standby_c_on when true;
end
supervisor automaton sup44:
  alphabet tube_1_ventilation_c_0, tube_1_ventilation_c_1, tube_1_ventilation_c_2, tube_1_ventilation_c_3, tube_1_ventilation_c_4, tube_1_ventilation_c_5, tube_1_ventilation_c_6, tube_1_ventilation_c_7, tube_1_ventilation_c_8, tube_1_ventilation_entrance_c_0, tube_1_ventilation_entrance_c_1, tube_1_ventilation_entrance_c_2, tube_1_ventilation_entrance_c_3, tube_1_ventilation_entrance_c_4, tube_1_ventilation_entrance_c_5, tube_1_ventilation_entrance_c_6, tube_1_ventilation_entrance_c_7, tube_1_ventilation_entrance_c_8;
  location:
    initial;
    marked;
    edge tube_1_ventilation_c_0 when true;
    edge tube_1_ventilation_c_1 when true;
    edge tube_1_ventilation_c_2 when true;
    edge tube_1_ventilation_c_3 when true;
    edge tube_1_ventilation_c_4 when true;
    edge tube_1_ventilation_c_5 when true;
    edge tube_1_ventilation_c_6 when true;
    edge tube_1_ventilation_c_7 when true;
    edge tube_1_ventilation_c_8 when true;
    edge tube_1_ventilation_entrance_c_0 when true;
    edge tube_1_ventilation_entrance_c_1 when true;
    edge tube_1_ventilation_entrance_c_2 when true;
    edge tube_1_ventilation_entrance_c_3 when true;
    edge tube_1_ventilation_entrance_c_4 when true;
    edge tube_1_ventilation_entrance_c_5 when true;
    edge tube_1_ventilation_entrance_c_6 when true;
    edge tube_1_ventilation_entrance_c_7 when true;
    edge tube_1_ventilation_entrance_c_8 when true;
end
supervisor automaton sup49:
  alphabet tube_2_boom_barrier_1_actuator_up_c_on, tube_2_boom_barrier_1_actuator_up_c_off, tube_2_boom_barrier_1_actuator_down_c_on, tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency, tube_2_boom_barrier_2_actuator_up_c_on, tube_2_boom_barrier_2_actuator_up_c_off, tube_2_boom_barrier_2_actuator_down_c_on, tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency, tube_2_traffic_light_1_mode_c_flashing, tube_2_traffic_light_1_mode_c_off, tube_2_traffic_light_1_mode_c_yellow, tube_2_traffic_light_1_mode_c_red, tube_2_traffic_light_1_timer_release_signal_c_on, tube_2_traffic_light_1_timer_release_signal_c_reset, tube_2_traffic_light_2_mode_c_flashing, tube_2_traffic_light_2_mode_c_off, tube_2_traffic_light_2_mode_c_yellow, tube_2_traffic_light_2_mode_c_red, tube_2_traffic_light_2_timer_release_signal_c_on, tube_2_traffic_light_2_timer_release_signal_c_reset, tube_2_traffic_light_3_mode_c_flashing, tube_2_traffic_light_3_mode_c_off, tube_2_traffic_light_3_mode_c_yellow, tube_2_traffic_light_3_mode_c_red, tube_2_traffic_light_3_timer_release_signal_c_on, tube_2_traffic_light_3_timer_release_signal_c_reset, tube_2_j32_mode_c_on, tube_2_j32_mode_c_off, tube_2_matrix_sign_traffic_light_c_on, tube_2_matrix_sign_traffic_light_c_off, tube_2_channel_c_1_on, tube_2_channel_c_2_on, tube_2_channel_c_3_on, tube_2_channel_c_4_on, tube_2_channel_c_5_on, tube_2_channel_c_6_on, tube_2_channel_c_1_off, tube_2_channel_c_2_off, tube_2_channel_c_3_off, tube_2_channel_c_4_off, tube_2_channel_c_5_off, tube_2_channel_c_6_off, tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_off when true;
    edge tube_2_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_1_actuator_down_c_on when true;
    edge tube_2_boom_barrier_1_actuator_up_c_off when true;
    edge tube_2_boom_barrier_1_actuator_up_c_on when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_2_actuator_down_c_on when true;
    edge tube_2_boom_barrier_2_actuator_up_c_off when true;
    edge tube_2_boom_barrier_2_actuator_up_c_on when true;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_channel_c_1_off when true;
    edge tube_2_channel_c_1_on when true;
    edge tube_2_channel_c_2_off when true;
    edge tube_2_channel_c_2_on when true;
    edge tube_2_channel_c_3_off when true;
    edge tube_2_channel_c_3_on when true;
    edge tube_2_channel_c_4_off when true;
    edge tube_2_channel_c_4_on when true;
    edge tube_2_channel_c_5_off when true;
    edge tube_2_channel_c_5_on when true;
    edge tube_2_channel_c_6_off when true;
    edge tube_2_channel_c_6_on when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_j32_mode_c_off when true;
    edge tube_2_j32_mode_c_on when true;
    edge tube_2_matrix_sign_traffic_light_c_off when true;
    edge tube_2_matrix_sign_traffic_light_c_on when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
    edge tube_2_traffic_light_1_mode_c_flashing when true;
    edge tube_2_traffic_light_1_mode_c_off when true;
    edge tube_2_traffic_light_1_mode_c_red when true;
    edge tube_2_traffic_light_1_mode_c_yellow when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_2_mode_c_flashing when true;
    edge tube_2_traffic_light_2_mode_c_off when true;
    edge tube_2_traffic_light_2_mode_c_red when true;
    edge tube_2_traffic_light_2_mode_c_yellow when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_3_mode_c_flashing when true;
    edge tube_2_traffic_light_3_mode_c_off when true;
    edge tube_2_traffic_light_3_mode_c_red when true;
    edge tube_2_traffic_light_3_mode_c_yellow when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup50:
  alphabet tube_2_boom_barrier_1_actuator_up_c_on, tube_2_boom_barrier_1_actuator_up_c_off, tube_2_boom_barrier_1_actuator_down_c_on, tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency, tube_2_boom_barrier_2_actuator_up_c_on, tube_2_boom_barrier_2_actuator_up_c_off, tube_2_boom_barrier_2_actuator_down_c_on, tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency, tube_2_channel_c_1_on, tube_2_channel_c_2_on, tube_2_channel_c_3_on, tube_2_channel_c_4_on, tube_2_channel_c_5_on, tube_2_channel_c_6_on, tube_2_channel_c_1_off, tube_2_channel_c_2_off, tube_2_channel_c_3_off, tube_2_channel_c_4_off, tube_2_channel_c_5_off, tube_2_channel_c_6_off;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_off when true;
    edge tube_2_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_1_actuator_down_c_on when true;
    edge tube_2_boom_barrier_1_actuator_up_c_off when true;
    edge tube_2_boom_barrier_1_actuator_up_c_on when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_2_actuator_down_c_on when true;
    edge tube_2_boom_barrier_2_actuator_up_c_off when true;
    edge tube_2_boom_barrier_2_actuator_up_c_on when true;
    edge tube_2_channel_c_1_off when true;
    edge tube_2_channel_c_1_on when true;
    edge tube_2_channel_c_2_off when true;
    edge tube_2_channel_c_2_on when true;
    edge tube_2_channel_c_3_off when true;
    edge tube_2_channel_c_3_on when true;
    edge tube_2_channel_c_4_off when true;
    edge tube_2_channel_c_4_on when true;
    edge tube_2_channel_c_5_off when true;
    edge tube_2_channel_c_5_on when true;
    edge tube_2_channel_c_6_off when true;
    edge tube_2_channel_c_6_on when true;
end
supervisor automaton sup51:
  alphabet tube_2_boom_barrier_1_actuator_up_c_on, tube_2_boom_barrier_1_actuator_up_c_off, tube_2_boom_barrier_1_actuator_down_c_on, tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency, tube_2_boom_barrier_2_actuator_up_c_on, tube_2_boom_barrier_2_actuator_up_c_off, tube_2_boom_barrier_2_actuator_down_c_on, tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency, tube_2_traffic_light_1_mode_c_flashing, tube_2_traffic_light_1_mode_c_off, tube_2_traffic_light_1_mode_c_yellow, tube_2_traffic_light_1_mode_c_red, tube_2_traffic_light_1_timer_release_signal_c_on, tube_2_traffic_light_1_timer_release_signal_c_reset, tube_2_traffic_light_2_mode_c_flashing, tube_2_traffic_light_2_mode_c_off, tube_2_traffic_light_2_mode_c_yellow, tube_2_traffic_light_2_mode_c_red, tube_2_traffic_light_2_timer_release_signal_c_on, tube_2_traffic_light_2_timer_release_signal_c_reset, tube_2_traffic_light_3_mode_c_flashing, tube_2_traffic_light_3_mode_c_off, tube_2_traffic_light_3_mode_c_yellow, tube_2_traffic_light_3_mode_c_red, tube_2_traffic_light_3_timer_release_signal_c_on, tube_2_traffic_light_3_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_off when true;
    edge tube_2_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_1_actuator_down_c_on when true;
    edge tube_2_boom_barrier_1_actuator_up_c_off when true;
    edge tube_2_boom_barrier_1_actuator_up_c_on when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_2_actuator_down_c_on when true;
    edge tube_2_boom_barrier_2_actuator_up_c_off when true;
    edge tube_2_boom_barrier_2_actuator_up_c_on when true;
    edge tube_2_traffic_light_1_mode_c_flashing when true;
    edge tube_2_traffic_light_1_mode_c_off when true;
    edge tube_2_traffic_light_1_mode_c_red when true;
    edge tube_2_traffic_light_1_mode_c_yellow when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_2_mode_c_flashing when true;
    edge tube_2_traffic_light_2_mode_c_off when true;
    edge tube_2_traffic_light_2_mode_c_red when true;
    edge tube_2_traffic_light_2_mode_c_yellow when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_3_mode_c_flashing when true;
    edge tube_2_traffic_light_3_mode_c_off when true;
    edge tube_2_traffic_light_3_mode_c_red when true;
    edge tube_2_traffic_light_3_mode_c_yellow when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup52:
  alphabet tube_2_boom_barrier_1_actuator_up_c_on, tube_2_boom_barrier_1_actuator_up_c_off, tube_2_boom_barrier_1_actuator_down_c_on, tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_off when true;
    edge tube_2_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_1_actuator_down_c_on when true;
    edge tube_2_boom_barrier_1_actuator_up_c_off when true;
    edge tube_2_boom_barrier_1_actuator_up_c_on when true;
end
supervisor automaton sup53:
  alphabet tube_2_boom_barrier_1_actuator_up_c_on, tube_2_boom_barrier_1_actuator_up_c_off, tube_2_boom_barrier_1_actuator_down_c_on, tube_2_boom_barrier_1_actuator_down_c_off, tube_2_boom_barrier_1_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_1_actuator_down_c_off when true;
    edge tube_2_boom_barrier_1_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_1_actuator_down_c_on when true;
    edge tube_2_boom_barrier_1_actuator_up_c_off when true;
    edge tube_2_boom_barrier_1_actuator_up_c_on when true;
end
supervisor automaton sup55:
  alphabet tube_2_boom_barrier_2_actuator_up_c_on, tube_2_boom_barrier_2_actuator_up_c_off, tube_2_boom_barrier_2_actuator_down_c_on, tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_2_actuator_down_c_off when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_2_actuator_down_c_on when true;
    edge tube_2_boom_barrier_2_actuator_up_c_off when true;
    edge tube_2_boom_barrier_2_actuator_up_c_on when true;
end
supervisor automaton sup56:
  alphabet tube_2_boom_barrier_2_actuator_up_c_on, tube_2_boom_barrier_2_actuator_up_c_off, tube_2_boom_barrier_2_actuator_down_c_on, tube_2_boom_barrier_2_actuator_down_c_off, tube_2_boom_barrier_2_actuator_down_c_off_emergency;
  location:
    initial;
    marked;
    edge tube_2_boom_barrier_2_actuator_down_c_off when true;
    edge tube_2_boom_barrier_2_actuator_down_c_off_emergency when true;
    edge tube_2_boom_barrier_2_actuator_down_c_on when true;
    edge tube_2_boom_barrier_2_actuator_up_c_off when true;
    edge tube_2_boom_barrier_2_actuator_up_c_on when true;
end
supervisor automaton sup58:
  alphabet tube_2_traffic_light_1_mode_c_flashing, tube_2_traffic_light_1_mode_c_off, tube_2_traffic_light_1_mode_c_yellow, tube_2_traffic_light_1_mode_c_red, tube_2_traffic_light_1_timer_release_signal_c_on, tube_2_traffic_light_1_timer_release_signal_c_reset, tube_2_traffic_light_2_mode_c_flashing, tube_2_traffic_light_2_mode_c_off, tube_2_traffic_light_2_mode_c_yellow, tube_2_traffic_light_2_mode_c_red, tube_2_traffic_light_2_timer_release_signal_c_on, tube_2_traffic_light_2_timer_release_signal_c_reset, tube_2_traffic_light_3_mode_c_flashing, tube_2_traffic_light_3_mode_c_off, tube_2_traffic_light_3_mode_c_yellow, tube_2_traffic_light_3_mode_c_red, tube_2_traffic_light_3_timer_release_signal_c_on, tube_2_traffic_light_3_timer_release_signal_c_reset, tube_2_j32_mode_c_on, tube_2_j32_mode_c_off, tube_2_j32_timer_release_signal_c_on, tube_2_j32_timer_release_signal_c_reset, tube_2_matrix_sign_traffic_light_c_on, tube_2_matrix_sign_traffic_light_c_off;
  location:
    initial;
    marked;
    edge tube_2_j32_mode_c_off when true;
    edge tube_2_j32_mode_c_on when true;
    edge tube_2_j32_timer_release_signal_c_on when true;
    edge tube_2_j32_timer_release_signal_c_reset when true;
    edge tube_2_matrix_sign_traffic_light_c_off when true;
    edge tube_2_matrix_sign_traffic_light_c_on when true;
    edge tube_2_traffic_light_1_mode_c_flashing when true;
    edge tube_2_traffic_light_1_mode_c_off when true;
    edge tube_2_traffic_light_1_mode_c_red when true;
    edge tube_2_traffic_light_1_mode_c_yellow when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_2_mode_c_flashing when true;
    edge tube_2_traffic_light_2_mode_c_off when true;
    edge tube_2_traffic_light_2_mode_c_red when true;
    edge tube_2_traffic_light_2_mode_c_yellow when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_reset when true;
    edge tube_2_traffic_light_3_mode_c_flashing when true;
    edge tube_2_traffic_light_3_mode_c_off when true;
    edge tube_2_traffic_light_3_mode_c_red when true;
    edge tube_2_traffic_light_3_mode_c_yellow when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup59:
  alphabet tube_2_traffic_light_1_mode_c_flashing, tube_2_traffic_light_1_mode_c_off, tube_2_traffic_light_1_mode_c_yellow, tube_2_traffic_light_1_mode_c_red, tube_2_traffic_light_1_timer_release_signal_c_on, tube_2_traffic_light_1_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_2_traffic_light_1_mode_c_flashing when true;
    edge tube_2_traffic_light_1_mode_c_off when true;
    edge tube_2_traffic_light_1_mode_c_red when true;
    edge tube_2_traffic_light_1_mode_c_yellow when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_1_timer_release_signal_c_reset when true;
end
supervisor automaton sup60:
  alphabet tube_2_traffic_light_2_mode_c_flashing, tube_2_traffic_light_2_mode_c_off, tube_2_traffic_light_2_mode_c_yellow, tube_2_traffic_light_2_mode_c_red, tube_2_traffic_light_2_timer_release_signal_c_on, tube_2_traffic_light_2_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_2_traffic_light_2_mode_c_flashing when true;
    edge tube_2_traffic_light_2_mode_c_off when true;
    edge tube_2_traffic_light_2_mode_c_red when true;
    edge tube_2_traffic_light_2_mode_c_yellow when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_2_timer_release_signal_c_reset when true;
end
supervisor automaton sup61:
  alphabet tube_2_traffic_light_3_mode_c_flashing, tube_2_traffic_light_3_mode_c_off, tube_2_traffic_light_3_mode_c_yellow, tube_2_traffic_light_3_mode_c_red, tube_2_traffic_light_3_timer_release_signal_c_on, tube_2_traffic_light_3_timer_release_signal_c_reset;
  location:
    initial;
    marked;
    edge tube_2_traffic_light_3_mode_c_flashing when true;
    edge tube_2_traffic_light_3_mode_c_off when true;
    edge tube_2_traffic_light_3_mode_c_red when true;
    edge tube_2_traffic_light_3_mode_c_yellow when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_on when true;
    edge tube_2_traffic_light_3_timer_release_signal_c_reset when true;
end
supervisor automaton sup69:
  alphabet tube_2_channel_c_1_on, tube_2_channel_c_2_on, tube_2_channel_c_3_on, tube_2_channel_c_4_on, tube_2_channel_c_5_on, tube_2_channel_c_6_on, tube_2_channel_c_1_off, tube_2_channel_c_2_off, tube_2_channel_c_3_off, tube_2_channel_c_4_off, tube_2_channel_c_5_off, tube_2_channel_c_6_off;
  location:
    initial;
    marked;
    edge tube_2_channel_c_1_off when true;
    edge tube_2_channel_c_1_on when true;
    edge tube_2_channel_c_2_off when true;
    edge tube_2_channel_c_2_on when true;
    edge tube_2_channel_c_3_off when true;
    edge tube_2_channel_c_3_on when true;
    edge tube_2_channel_c_4_off when true;
    edge tube_2_channel_c_4_on when true;
    edge tube_2_channel_c_5_off when true;
    edge tube_2_channel_c_5_on when true;
    edge tube_2_channel_c_6_off when true;
    edge tube_2_channel_c_6_on when true;
end
supervisor automaton sup73:
  alphabet tube_2_ventilation_c_0, tube_2_ventilation_c_1, tube_2_ventilation_c_2, tube_2_ventilation_c_3, tube_2_ventilation_c_4, tube_2_ventilation_c_5, tube_2_ventilation_c_6, tube_2_ventilation_c_7, tube_2_ventilation_c_8, tube_2_ventilation_entrance_c_0, tube_2_ventilation_entrance_c_1, tube_2_ventilation_entrance_c_2, tube_2_ventilation_entrance_c_3, tube_2_ventilation_entrance_c_4, tube_2_ventilation_entrance_c_5, tube_2_ventilation_entrance_c_6, tube_2_ventilation_entrance_c_7, tube_2_ventilation_entrance_c_8, tube_2_switch_timer_audio_c_on, tube_2_switch_timer_audio_c_off, tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_standby_c_on, tube_2_standby_c_off, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done, middle_tunnel_channel_pressure_c_left, middle_tunnel_channel_pressure_c_right, middle_tunnel_channel_pressure_c_off, middle_tunnel_channel_lighting_c_on, middle_tunnel_channel_lighting_c_off, middle_tunnel_channel_intercom_c_on, middle_tunnel_channel_intercom_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_intercom_c_off when true;
    edge middle_tunnel_channel_intercom_c_on when true;
    edge middle_tunnel_channel_lighting_c_off when true;
    edge middle_tunnel_channel_lighting_c_on when true;
    edge middle_tunnel_channel_pressure_c_left when true;
    edge middle_tunnel_channel_pressure_c_off when true;
    edge middle_tunnel_channel_pressure_c_right when true;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
    edge tube_2_standby_c_off when true;
    edge tube_2_standby_c_on when true;
    edge tube_2_switch_timer_audio_c_off when true;
    edge tube_2_switch_timer_audio_c_on when true;
    edge tube_2_ventilation_c_0 when true;
    edge tube_2_ventilation_c_1 when true;
    edge tube_2_ventilation_c_2 when true;
    edge tube_2_ventilation_c_3 when true;
    edge tube_2_ventilation_c_4 when true;
    edge tube_2_ventilation_c_5 when true;
    edge tube_2_ventilation_c_6 when true;
    edge tube_2_ventilation_c_7 when true;
    edge tube_2_ventilation_c_8 when true;
    edge tube_2_ventilation_entrance_c_0 when true;
    edge tube_2_ventilation_entrance_c_1 when true;
    edge tube_2_ventilation_entrance_c_2 when true;
    edge tube_2_ventilation_entrance_c_3 when true;
    edge tube_2_ventilation_entrance_c_4 when true;
    edge tube_2_ventilation_entrance_c_5 when true;
    edge tube_2_ventilation_entrance_c_6 when true;
    edge tube_2_ventilation_entrance_c_7 when true;
    edge tube_2_ventilation_entrance_c_8 when true;
end
supervisor automaton sup76:
  alphabet tube_1_escape_door_sound_beacon_c_on, tube_1_escape_door_sound_beacon_c_off, tube_1_intercom_c_on, tube_1_intercom_c_off, tube_1_switch_timer_audio_c_on, tube_1_switch_timer_audio_c_off;
  location:
    initial;
    marked;
    edge tube_1_escape_door_sound_beacon_c_off when true;
    edge tube_1_escape_door_sound_beacon_c_on when true;
    edge tube_1_intercom_c_off when true;
    edge tube_1_intercom_c_on when true;
    edge tube_1_switch_timer_audio_c_off when true;
    edge tube_1_switch_timer_audio_c_on when true;
end
supervisor automaton sup80:
  alphabet tube_2_escape_door_sound_beacon_c_on, tube_2_escape_door_sound_beacon_c_off, tube_2_intercom_c_on, tube_2_intercom_c_off, tube_2_switch_timer_audio_c_on, tube_2_switch_timer_audio_c_off;
  location:
    initial;
    marked;
    edge tube_2_escape_door_sound_beacon_c_off when true;
    edge tube_2_escape_door_sound_beacon_c_on when true;
    edge tube_2_intercom_c_off when true;
    edge tube_2_intercom_c_on when true;
    edge tube_2_switch_timer_audio_c_off when true;
    edge tube_2_switch_timer_audio_c_on when true;
end
supervisor automaton sup91:
  alphabet tube_2_ventilation_c_0, tube_2_ventilation_c_1, tube_2_ventilation_c_2, tube_2_ventilation_c_3, tube_2_ventilation_c_4, tube_2_ventilation_c_5, tube_2_ventilation_c_6, tube_2_ventilation_c_7, tube_2_ventilation_c_8, tube_2_ventilation_entrance_c_0, tube_2_ventilation_entrance_c_1, tube_2_ventilation_entrance_c_2, tube_2_ventilation_entrance_c_3, tube_2_ventilation_entrance_c_4, tube_2_ventilation_entrance_c_5, tube_2_ventilation_entrance_c_6, tube_2_ventilation_entrance_c_7, tube_2_ventilation_entrance_c_8;
  location:
    initial;
    marked;
    edge tube_2_ventilation_c_0 when true;
    edge tube_2_ventilation_c_1 when true;
    edge tube_2_ventilation_c_2 when true;
    edge tube_2_ventilation_c_3 when true;
    edge tube_2_ventilation_c_4 when true;
    edge tube_2_ventilation_c_5 when true;
    edge tube_2_ventilation_c_6 when true;
    edge tube_2_ventilation_c_7 when true;
    edge tube_2_ventilation_c_8 when true;
    edge tube_2_ventilation_entrance_c_0 when true;
    edge tube_2_ventilation_entrance_c_1 when true;
    edge tube_2_ventilation_entrance_c_2 when true;
    edge tube_2_ventilation_entrance_c_3 when true;
    edge tube_2_ventilation_entrance_c_4 when true;
    edge tube_2_ventilation_entrance_c_5 when true;
    edge tube_2_ventilation_entrance_c_6 when true;
    edge tube_2_ventilation_entrance_c_7 when true;
    edge tube_2_ventilation_entrance_c_8 when true;
end
supervisor automaton sup95:
  alphabet tube_2_lighting_c_0, tube_2_lighting_c_1, tube_2_lighting_c_2, tube_2_lighting_c_3, tube_2_lighting_c_4, tube_2_lighting_c_5, tube_2_lighting_c_6, tube_2_lighting_c_7, tube_2_lighting_c_8, tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_lighting_c_0 when true;
    edge tube_2_lighting_c_1 when true;
    edge tube_2_lighting_c_2 when true;
    edge tube_2_lighting_c_3 when true;
    edge tube_2_lighting_c_4 when true;
    edge tube_2_lighting_c_5 when true;
    edge tube_2_lighting_c_6 when true;
    edge tube_2_lighting_c_7 when true;
    edge tube_2_lighting_c_8 when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
end
supervisor automaton sup96:
  alphabet tube_2_lighting_c_0, tube_2_lighting_c_1, tube_2_lighting_c_2, tube_2_lighting_c_3, tube_2_lighting_c_4, tube_2_lighting_c_5, tube_2_lighting_c_6, tube_2_lighting_c_7, tube_2_lighting_c_8;
  location:
    initial;
    marked;
    edge tube_2_lighting_c_0 when true;
    edge tube_2_lighting_c_1 when true;
    edge tube_2_lighting_c_2 when true;
    edge tube_2_lighting_c_3 when true;
    edge tube_2_lighting_c_4 when true;
    edge tube_2_lighting_c_5 when true;
    edge tube_2_lighting_c_6 when true;
    edge tube_2_lighting_c_7 when true;
    edge tube_2_lighting_c_8 when true;
end
supervisor automaton sup99:
  alphabet tube_2_matrix_sign_free_c_on, tube_2_matrix_sign_free_c_off, tube_2_ventilation_direction_c_against, tube_2_ventilation_direction_c_along, tube_2_recorder_c_on, tube_2_recorder_c_off, tube_2_escape_door_contour_lighting_c_on, tube_2_escape_door_contour_lighting_c_off, tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done, middle_tunnel_channel_dynamic_escaperoute_indication_c_upward, middle_tunnel_channel_dynamic_escaperoute_indication_c_downward, middle_tunnel_channel_dynamic_escaperoute_indication_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_downward when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_off when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_upward when true;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_escape_door_contour_lighting_c_off when true;
    edge tube_2_escape_door_contour_lighting_c_on when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_matrix_sign_free_c_off when true;
    edge tube_2_matrix_sign_free_c_on when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
    edge tube_2_recorder_c_off when true;
    edge tube_2_recorder_c_on when true;
    edge tube_2_ventilation_direction_c_against when true;
    edge tube_2_ventilation_direction_c_along when true;
end
supervisor automaton sup104:
  alphabet tube_2_mode_c_emergency, tube_2_mode_c_recovery, tube_2_mode_c_support, tube_2_mode_c_operational, tube_2_evacuation_c_on, tube_2_evacuation_c_off, tube_2_button_operational_observer_c_done, tube_2_button_evacuation_observer_c_done, tube_2_button_recovery_observer_c_done;
  location:
    initial;
    marked;
    edge tube_2_button_evacuation_observer_c_done when true;
    edge tube_2_button_operational_observer_c_done when true;
    edge tube_2_button_recovery_observer_c_done when true;
    edge tube_2_evacuation_c_off when true;
    edge tube_2_evacuation_c_on when true;
    edge tube_2_mode_c_emergency when true;
    edge tube_2_mode_c_operational when true;
    edge tube_2_mode_c_recovery when true;
    edge tube_2_mode_c_support when true;
end
supervisor automaton sup105:
  alphabet middle_tunnel_channel_dynamic_escaperoute_indication_c_upward, middle_tunnel_channel_dynamic_escaperoute_indication_c_downward, middle_tunnel_channel_dynamic_escaperoute_indication_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_downward when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_off when true;
    edge middle_tunnel_channel_dynamic_escaperoute_indication_c_upward when true;
end
supervisor automaton sup106:
  alphabet tube_2_standby_c_on, tube_2_standby_c_off, middle_tunnel_channel_pressure_c_left, middle_tunnel_channel_pressure_c_right, middle_tunnel_channel_pressure_c_off, middle_tunnel_channel_lighting_c_on, middle_tunnel_channel_lighting_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_lighting_c_off when true;
    edge middle_tunnel_channel_lighting_c_on when true;
    edge middle_tunnel_channel_pressure_c_left when true;
    edge middle_tunnel_channel_pressure_c_off when true;
    edge middle_tunnel_channel_pressure_c_right when true;
    edge tube_2_standby_c_off when true;
    edge tube_2_standby_c_on when true;
end
supervisor automaton sup108:
  alphabet middle_tunnel_channel_pressure_c_left, middle_tunnel_channel_pressure_c_right, middle_tunnel_channel_pressure_c_off;
  location:
    initial;
    marked;
    edge middle_tunnel_channel_pressure_c_left when true;
    edge middle_tunnel_channel_pressure_c_off when true;
    edge middle_tunnel_channel_pressure_c_right when true;
end
requirement invariant tube_1_mode_c_support needs tube_2_mode.emergency;
requirement invariant tube_2_mode_c_support needs tube_1_mode.emergency;
requirement invariant tube_1_mode.emergency disables tube_2_standby_c_on;
requirement invariant tube_1_mode.emergency disables tube_2_mode_c_emergency;
requirement invariant tube_2_mode.emergency disables tube_1_standby_c_on;
requirement invariant tube_2_mode.emergency disables tube_1_mode_c_emergency;
requirement invariant tube_1_evacuation_c_on needs tube_2_mode.support;
requirement invariant tube_2_evacuation_c_on needs tube_1_mode.support;
requirement invariant tube_1_mode_c_recovery needs tube_1_mode.emergency and tube_1_button_recovery_observer.pressed or tube_1_mode.support and tube_2_mode.recovery;
requirement invariant tube_2_mode_c_recovery needs tube_2_mode.emergency and tube_2_button_recovery_observer.pressed or tube_2_mode.support and tube_1_mode.recovery;
requirement invariant middle_tunnel_channel_lighting_c_on needs tube_1_standby.on or tube_1_mode.emergency or tube_2_standby.on or tube_2_mode.emergency;
requirement invariant middle_tunnel_channel_lighting_c_off needs tube_1_standby.off;
requirement invariant middle_tunnel_channel_lighting_c_off needs tube_2_standby.off;
requirement invariant middle_tunnel_channel_lighting_c_off needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant middle_tunnel_channel_lighting_c_off needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_upward needs tube_1_evacuation.on;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_downward needs tube_2_evacuation.on;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_off needs tube_1_evacuation.off;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_off needs tube_2_evacuation.off;
requirement invariant middle_tunnel_channel_intercom_c_on needs tube_1_evacuation.on and tube_1_switch_timer_audio.on_2 or tube_2_evacuation.on and tube_2_switch_timer_audio.on_2;
requirement invariant middle_tunnel_channel_intercom_c_off needs tube_1_evacuation.off or not tube_1_switch_timer_audio.on_2;
requirement invariant middle_tunnel_channel_intercom_c_off needs tube_2_evacuation.off or not tube_2_switch_timer_audio.on_2;
requirement invariant tube_1_mode_c_operational needs tube_1_mode.recovery;
requirement invariant tube_1_mode_c_operational needs tube_1_button_operational_observer.pressed;
requirement invariant tube_1_mode_c_emergency needs tube_1_mode.operational;
requirement invariant tube_1_mode_c_emergency needs tube_1_SOS.on;
requirement invariant tube_1_mode_c_emergency needs tube_1_smoke_detection.mode > 3;
requirement invariant tube_1_mode_c_emergency needs tube_1_emergency_cabinet_A_sensor_open.on or tube_1_emergency_cabinet_C_sensor_open.on;
requirement invariant tube_1_mode_c_emergency needs tube_1_emergency_cabinet_A_hand_extinguisher.on or tube_1_emergency_cabinet_A_fire_hose.on or tube_1_emergency_cabinet_A_emergency_phone.on or tube_1_emergency_cabinet_C_hand_extinguisher.on or tube_1_emergency_cabinet_C_emergency_phone.on;
requirement invariant tube_1_mode_c_recovery needs tube_1_mode.emergency or tube_1_mode.support;
requirement invariant tube_1_mode_c_support needs not tube_1_mode.emergency;
requirement invariant tube_1_standby_c_on needs tube_1_mode.operational;
requirement invariant tube_1_standby_c_on needs tube_1_smoke_detection.mode > 3 or tube_1_emergency_cabinet_A_hand_extinguisher.on or tube_1_emergency_cabinet_A_fire_hose.on or tube_1_emergency_cabinet_C_hand_extinguisher.on;
requirement invariant tube_1_standby_c_off needs not tube_1_mode.operational;
requirement invariant tube_1_evacuation_c_on needs tube_1_button_evacuation_observer.pressed;
requirement invariant tube_1_evacuation_c_off needs not tube_1_mode.emergency;
requirement invariant tube_1_j32_mode_c_on needs tube_1_mode.emergency or tube_1_mode.support;
requirement invariant tube_1_j32_mode_c_off needs tube_1_traffic_light_1_mode.off;
requirement invariant tube_1_j32_mode_c_off needs tube_1_traffic_light_2_mode.off;
requirement invariant tube_1_j32_mode_c_off needs tube_1_traffic_light_3_mode.off;
requirement invariant tube_1_j32_mode_c_off needs tube_1_mode.operational;
requirement invariant tube_1_matrix_sign_traffic_light_c_on needs not tube_1_mode.operational;
requirement invariant tube_1_matrix_sign_traffic_light_c_on needs not tube_1_traffic_light_1_mode.red;
requirement invariant tube_1_matrix_sign_traffic_light_c_on needs not tube_1_traffic_light_2_mode.red;
requirement invariant tube_1_matrix_sign_traffic_light_c_on needs not tube_1_traffic_light_3_mode.red;
requirement invariant tube_1_matrix_sign_traffic_light_c_off needs tube_1_mode.operational or tube_1_traffic_light_1_mode.red or tube_1_traffic_light_2_mode.red or tube_1_traffic_light_3_mode.red;
requirement invariant tube_1_matrix_sign_free_c_on needs not tube_1_mode.operational;
requirement invariant tube_1_matrix_sign_free_c_off needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_direction_c_against needs tube_1_mode.support;
requirement invariant tube_1_ventilation_direction_c_along needs not tube_1_mode.support;
requirement invariant tube_1_channel_c_1_on needs not tube_1_mode.operational and (not tube_1_traffic_light_1_mode.red or not tube_1_traffic_light_2_mode.red or not tube_1_traffic_light_3_mode.red);
requirement invariant tube_1_channel_c_2_on needs tube_1_boom_barrier_1_actuator_down.on or tube_1_boom_barrier_2_actuator_down.on;
requirement invariant tube_1_channel_c_3_on needs tube_1_mode.operational and (tube_1_emergency_cabinet_A_sensor_open.on or tube_1_emergency_cabinet_C_sensor_open.on);
requirement invariant tube_1_channel_c_4_on needs tube_1_SOS.on;
requirement invariant tube_1_channel_c_5_on needs tube_1_smoke_detection.mode > 4;
requirement invariant tube_1_channel_c_6_on needs tube_1_escape_door_sensor_open.on;
requirement invariant tube_1_channel_c_1_off needs not(not tube_1_mode.operational and (not tube_1_traffic_light_1_mode.red or not tube_1_traffic_light_2_mode.red or not tube_1_traffic_light_3_mode.red));
requirement invariant tube_1_channel_c_2_off needs not(tube_1_boom_barrier_1_actuator_down.on or tube_1_boom_barrier_2_actuator_down.on);
requirement invariant tube_1_channel_c_3_off needs not(tube_1_mode.operational and (tube_1_emergency_cabinet_A_sensor_open.on or tube_1_emergency_cabinet_C_sensor_open.on));
requirement invariant tube_1_channel_c_4_off needs not tube_1_SOS.on;
requirement invariant tube_1_channel_c_5_off needs not(tube_1_smoke_detection.mode > 4);
requirement invariant tube_1_channel_c_6_off needs not tube_1_escape_door_sensor_open.on;
requirement invariant tube_1_recorder_c_on needs tube_1_mode.emergency or tube_1_mode.support;
requirement invariant tube_1_recorder_c_off needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_switch_timer_audio_c_on needs tube_1_evacuation.on;
requirement invariant tube_1_switch_timer_audio_c_off needs tube_1_evacuation.off;
requirement invariant tube_1_boom_barrier_1_actuator_up_c_on needs tube_1_boom_barrier_1_actuator_down.off;
requirement invariant tube_1_boom_barrier_1_actuator_up_c_on needs not(tube_1_boom_barrier_1_sensor_open.on and tube_1_boom_barrier_1_actuator_up.off and tube_1_boom_barrier_1_actuator_down.off);
requirement invariant tube_1_boom_barrier_1_actuator_up_c_off needs tube_1_boom_barrier_1_sensor_open.on;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs tube_1_boom_barrier_1_actuator_up.off;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs not(tube_1_boom_barrier_1_sensor_closed.on and tube_1_boom_barrier_1_actuator_up.off and tube_1_boom_barrier_1_actuator_down.off);
requirement invariant tube_1_boom_barrier_1_actuator_down_c_off needs tube_1_boom_barrier_1_sensor_closed.on;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs tube_1_boom_barrier_1_obstacle_detection.off;
requirement invariant tube_1_boom_barrier_2_actuator_up_c_on needs tube_1_boom_barrier_2_actuator_down.off;
requirement invariant tube_1_boom_barrier_2_actuator_up_c_on needs not(tube_1_boom_barrier_2_sensor_open.on and tube_1_boom_barrier_2_actuator_up.off and tube_1_boom_barrier_2_actuator_down.off);
requirement invariant tube_1_boom_barrier_2_actuator_up_c_off needs tube_1_boom_barrier_2_sensor_open.on;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs tube_1_boom_barrier_2_actuator_up.off;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs not(tube_1_boom_barrier_2_sensor_closed.on and tube_1_boom_barrier_2_actuator_up.off and tube_1_boom_barrier_2_actuator_down.off);
requirement invariant tube_1_boom_barrier_2_actuator_down_c_off needs tube_1_boom_barrier_2_sensor_closed.on;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs tube_1_boom_barrier_2_obstacle_detection.off;
requirement invariant tube_1_traffic_light_1_timer_release_signal_c_on needs tube_1_traffic_light_1_mode.red;
requirement invariant tube_1_traffic_light_1_timer_release_signal_c_reset needs not tube_1_traffic_light_1_mode.red;
requirement invariant tube_1_traffic_light_2_timer_release_signal_c_on needs tube_1_traffic_light_2_mode.red;
requirement invariant tube_1_traffic_light_2_timer_release_signal_c_reset needs not tube_1_traffic_light_2_mode.red;
requirement invariant tube_1_traffic_light_3_timer_release_signal_c_on needs tube_1_traffic_light_3_mode.red;
requirement invariant tube_1_traffic_light_3_timer_release_signal_c_reset needs not tube_1_traffic_light_3_mode.red;
requirement invariant tube_1_j32_timer_release_signal_c_on needs tube_1_j32_mode.on;
requirement invariant tube_1_j32_timer_release_signal_c_reset needs tube_1_j32_mode.off;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs tube_1_traffic_light_1_release_signal.on;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs tube_1_traffic_light_2_release_signal.on;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs tube_1_traffic_light_3_release_signal.on;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_on needs not tube_1_mode.operational;
requirement invariant tube_1_boom_barrier_1_actuator_down_c_off_emergency needs tube_1_boom_barrier_1_obstacle_detection.on or tube_1_traffic_light_1_release_signal.off or tube_1_traffic_light_2_release_signal.off or tube_1_traffic_light_3_release_signal.off;
requirement invariant tube_1_boom_barrier_1_actuator_up_c_on needs tube_1_mode.operational;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs tube_1_traffic_light_1_release_signal.on;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs tube_1_traffic_light_2_release_signal.on;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs tube_1_traffic_light_3_release_signal.on;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_on needs not tube_1_mode.operational;
requirement invariant tube_1_boom_barrier_2_actuator_down_c_off_emergency needs tube_1_boom_barrier_2_obstacle_detection.on or tube_1_traffic_light_1_release_signal.off or tube_1_traffic_light_2_release_signal.off or tube_1_traffic_light_3_release_signal.off;
requirement invariant tube_1_boom_barrier_2_actuator_up_c_on needs tube_1_mode.operational;
requirement invariant tube_1_traffic_light_1_mode.red and (tube_1_boom_barrier_1_sensor_closed.on and tube_1_boom_barrier_1_actuator_up.off and tube_1_boom_barrier_1_actuator_down.off) disables tube_1_traffic_light_1_mode_c_flashing;
requirement invariant tube_1_traffic_light_1_mode.red and (tube_1_boom_barrier_2_sensor_closed.on and tube_1_boom_barrier_2_actuator_up.off and tube_1_boom_barrier_2_actuator_down.off) disables tube_1_traffic_light_1_mode_c_flashing;
requirement invariant tube_1_j32_mode.off disables tube_1_traffic_light_1_mode_c_flashing;
requirement invariant tube_1_traffic_light_1_mode.off and not tube_1_j32_timer_release_signal.finished disables tube_1_traffic_light_1_mode_c_flashing;
requirement invariant tube_1_traffic_light_1_mode_c_off needs tube_1_mode.operational;
requirement invariant tube_1_traffic_light_1_mode_c_flashing needs tube_1_traffic_light_1_mode.red and tube_1_mode.operational or tube_1_traffic_light_1_mode.off and not tube_1_mode.operational;
requirement invariant tube_1_traffic_light_1_mode_c_yellow needs not tube_1_mode.operational;
requirement invariant tube_1_traffic_light_2_mode.red and (tube_1_boom_barrier_1_sensor_closed.on and tube_1_boom_barrier_1_actuator_up.off and tube_1_boom_barrier_1_actuator_down.off) disables tube_1_traffic_light_2_mode_c_flashing;
requirement invariant tube_1_traffic_light_2_mode.red and (tube_1_boom_barrier_2_sensor_closed.on and tube_1_boom_barrier_2_actuator_up.off and tube_1_boom_barrier_2_actuator_down.off) disables tube_1_traffic_light_2_mode_c_flashing;
requirement invariant tube_1_j32_mode.off disables tube_1_traffic_light_2_mode_c_flashing;
requirement invariant tube_1_traffic_light_2_mode.off and not tube_1_j32_timer_release_signal.finished disables tube_1_traffic_light_2_mode_c_flashing;
requirement invariant tube_1_traffic_light_2_mode_c_off needs tube_1_mode.operational;
requirement invariant tube_1_traffic_light_2_mode_c_flashing needs tube_1_traffic_light_2_mode.red and tube_1_mode.operational or tube_1_traffic_light_2_mode.off and not tube_1_mode.operational;
requirement invariant tube_1_traffic_light_2_mode_c_yellow needs not tube_1_mode.operational;
requirement invariant tube_1_traffic_light_3_mode.red and (tube_1_boom_barrier_1_sensor_closed.on and tube_1_boom_barrier_1_actuator_up.off and tube_1_boom_barrier_1_actuator_down.off) disables tube_1_traffic_light_3_mode_c_flashing;
requirement invariant tube_1_traffic_light_3_mode.red and (tube_1_boom_barrier_2_sensor_closed.on and tube_1_boom_barrier_2_actuator_up.off and tube_1_boom_barrier_2_actuator_down.off) disables tube_1_traffic_light_3_mode_c_flashing;
requirement invariant tube_1_j32_mode.off disables tube_1_traffic_light_3_mode_c_flashing;
requirement invariant tube_1_traffic_light_3_mode.off and not tube_1_j32_timer_release_signal.finished disables tube_1_traffic_light_3_mode_c_flashing;
requirement invariant tube_1_traffic_light_3_mode_c_off needs tube_1_mode.operational;
requirement invariant tube_1_traffic_light_3_mode_c_flashing needs tube_1_traffic_light_3_mode.red and tube_1_mode.operational or tube_1_traffic_light_3_mode.off and not tube_1_mode.operational;
requirement invariant tube_1_traffic_light_3_mode_c_yellow needs not tube_1_mode.operational;
requirement invariant tube_1_ventilation_entrance_c_0 needs tube_1_mode.operational or tube_1_mode.support;
requirement invariant tube_1_ventilation_entrance_c_0 needs tube_1_smoke_detection.mode = 0 or tube_1_mode.support;
requirement invariant tube_1_ventilation_entrance_c_1 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_entrance_c_1 needs tube_1_smoke_detection.mode = 1;
requirement invariant tube_1_ventilation_entrance_c_2 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_entrance_c_2 needs tube_1_smoke_detection.mode = 2;
requirement invariant tube_1_ventilation_entrance_c_3 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_entrance_c_3 needs tube_1_smoke_detection.mode = 3;
requirement invariant tube_1_ventilation_entrance_c_4 needs tube_1_mode.operational and tube_1_smoke_detection.mode = 4 or tube_1_mode.recovery and tube_1_smoke_detection.mode < 5;
requirement invariant tube_1_ventilation_entrance_c_5 needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_ventilation_entrance_c_5 needs tube_1_smoke_detection.mode = 5;
requirement invariant tube_1_ventilation_entrance_c_6 needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_ventilation_entrance_c_6 needs tube_1_smoke_detection.mode = 6;
requirement invariant tube_1_ventilation_entrance_c_7 needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_ventilation_entrance_c_7 needs tube_1_smoke_detection.mode = 7;
requirement invariant tube_1_ventilation_entrance_c_8 needs (tube_1_mode.operational or tube_1_mode.recovery) and tube_1_smoke_detection.mode = 8 or tube_1_mode.emergency;
requirement invariant tube_1_ventilation_c_0 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_c_0 needs tube_1_smoke_detection.mode = 0;
requirement invariant tube_1_ventilation_c_1 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_c_1 needs tube_1_smoke_detection.mode = 1;
requirement invariant tube_1_ventilation_c_2 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_c_2 needs tube_1_smoke_detection.mode = 2;
requirement invariant tube_1_ventilation_c_3 needs tube_1_mode.operational;
requirement invariant tube_1_ventilation_c_3 needs tube_1_smoke_detection.mode = 3;
requirement invariant tube_1_ventilation_c_4 needs tube_1_mode.operational and tube_1_smoke_detection.mode = 4 or tube_1_mode.recovery and tube_1_smoke_detection.mode < 5;
requirement invariant tube_1_ventilation_c_5 needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_ventilation_c_5 needs tube_1_smoke_detection.mode = 5;
requirement invariant tube_1_ventilation_c_6 needs (tube_1_mode.operational or tube_1_mode.recovery) and tube_1_smoke_detection.mode = 6 or tube_1_mode.support and tube_1_smoke_detection.mode < 7;
requirement invariant tube_1_ventilation_c_7 needs tube_1_mode.operational or tube_1_mode.recovery or tube_1_mode.support;
requirement invariant tube_1_ventilation_c_7 needs tube_1_smoke_detection.mode = 7;
requirement invariant tube_1_ventilation_c_8 needs tube_1_smoke_detection.mode = 8 or tube_1_mode.emergency;
requirement invariant tube_1_lighting_c_0 needs tube_1_mode.operational;
requirement invariant tube_1_lighting_c_0 needs tube_1_lightsensor.mode = 0;
requirement invariant tube_1_lighting_c_1 needs tube_1_mode.operational;
requirement invariant tube_1_lighting_c_1 needs tube_1_lightsensor.mode = 1;
requirement invariant tube_1_lighting_c_2 needs tube_1_mode.operational;
requirement invariant tube_1_lighting_c_2 needs tube_1_lightsensor.mode = 2;
requirement invariant tube_1_lighting_c_3 needs tube_1_mode.operational;
requirement invariant tube_1_lighting_c_3 needs tube_1_lightsensor.mode = 3;
requirement invariant tube_1_lighting_c_4 needs tube_1_mode.operational and tube_1_lightsensor.mode = 4 or tube_1_mode.recovery and tube_1_lightsensor.mode < 5;
requirement invariant tube_1_lighting_c_5 needs tube_1_mode.operational or tube_1_mode.recovery;
requirement invariant tube_1_lighting_c_5 needs tube_1_lightsensor.mode = 5;
requirement invariant tube_1_lighting_c_6 needs (tube_1_mode.operational or tube_1_mode.recovery) and tube_1_lightsensor.mode = 6 or tube_1_mode.support and tube_1_lightsensor.mode < 7;
requirement invariant tube_1_lighting_c_7 needs tube_1_mode.operational or tube_1_mode.recovery or tube_1_mode.support;
requirement invariant tube_1_lighting_c_7 needs tube_1_lightsensor.mode = 7;
requirement invariant tube_1_lighting_c_8 needs tube_1_lightsensor.mode = 8 or tube_1_mode.emergency;
requirement invariant tube_1_escape_door_contour_lighting_c_on needs tube_1_evacuation.on;
requirement invariant tube_1_escape_door_contour_lighting_c_off needs tube_1_evacuation.off;
requirement invariant tube_1_escape_door_sound_beacon_c_on needs tube_1_switch_timer_audio.on_2;
requirement invariant tube_1_escape_door_sound_beacon_c_on needs tube_1_intercom.off;
requirement invariant tube_1_escape_door_sound_beacon_c_off needs not tube_1_switch_timer_audio.on_2;
requirement invariant tube_1_intercom_c_on needs tube_1_switch_timer_audio.on_1;
requirement invariant tube_1_intercom_c_on needs tube_1_escape_door_sound_beacon.off;
requirement invariant tube_1_intercom_c_off needs not tube_1_switch_timer_audio.on_1;
requirement invariant tube_2_mode_c_operational needs tube_2_mode.recovery;
requirement invariant tube_2_mode_c_operational needs tube_2_button_operational_observer.pressed;
requirement invariant tube_2_mode_c_emergency needs tube_2_mode.operational;
requirement invariant tube_2_mode_c_emergency needs tube_2_SOS.on;
requirement invariant tube_2_mode_c_emergency needs tube_2_smoke_detection.mode > 3;
requirement invariant tube_2_mode_c_emergency needs tube_2_emergency_cabinet_A_sensor_open.on or tube_2_emergency_cabinet_C_sensor_open.on;
requirement invariant tube_2_mode_c_emergency needs tube_2_emergency_cabinet_A_hand_extinguisher.on or tube_2_emergency_cabinet_A_fire_hose.on or tube_2_emergency_cabinet_A_emergency_phone.on or tube_2_emergency_cabinet_C_hand_extinguisher.on or tube_2_emergency_cabinet_C_emergency_phone.on;
requirement invariant tube_2_mode_c_recovery needs tube_2_mode.emergency or tube_2_mode.support;
requirement invariant tube_2_mode_c_support needs not tube_2_mode.emergency;
requirement invariant tube_2_standby_c_on needs tube_2_mode.operational;
requirement invariant tube_2_standby_c_on needs tube_2_smoke_detection.mode > 3 or tube_2_emergency_cabinet_A_hand_extinguisher.on or tube_2_emergency_cabinet_A_fire_hose.on or tube_2_emergency_cabinet_C_hand_extinguisher.on;
requirement invariant tube_2_standby_c_off needs not tube_2_mode.operational;
requirement invariant tube_2_evacuation_c_on needs tube_2_button_evacuation_observer.pressed;
requirement invariant tube_2_evacuation_c_off needs not tube_2_mode.emergency;
requirement invariant tube_2_j32_mode_c_on needs tube_2_mode.emergency or tube_2_mode.support;
requirement invariant tube_2_j32_mode_c_off needs tube_2_traffic_light_1_mode.off;
requirement invariant tube_2_j32_mode_c_off needs tube_2_traffic_light_2_mode.off;
requirement invariant tube_2_j32_mode_c_off needs tube_2_traffic_light_3_mode.off;
requirement invariant tube_2_j32_mode_c_off needs tube_2_mode.operational;
requirement invariant tube_2_matrix_sign_traffic_light_c_on needs not tube_2_mode.operational;
requirement invariant tube_2_matrix_sign_traffic_light_c_on needs not tube_2_traffic_light_1_mode.red;
requirement invariant tube_2_matrix_sign_traffic_light_c_on needs not tube_2_traffic_light_2_mode.red;
requirement invariant tube_2_matrix_sign_traffic_light_c_on needs not tube_2_traffic_light_3_mode.red;
requirement invariant tube_2_matrix_sign_traffic_light_c_off needs tube_2_mode.operational or tube_2_traffic_light_1_mode.red or tube_2_traffic_light_2_mode.red or tube_2_traffic_light_3_mode.red;
requirement invariant tube_2_matrix_sign_free_c_on needs not tube_2_mode.operational;
requirement invariant tube_2_matrix_sign_free_c_off needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_direction_c_against needs tube_2_mode.support;
requirement invariant tube_2_ventilation_direction_c_along needs not tube_2_mode.support;
requirement invariant tube_2_channel_c_1_on needs not tube_2_mode.operational and (not tube_2_traffic_light_1_mode.red or not tube_2_traffic_light_2_mode.red or not tube_2_traffic_light_3_mode.red);
requirement invariant tube_2_channel_c_2_on needs tube_2_boom_barrier_1_actuator_down.on or tube_2_boom_barrier_2_actuator_down.on;
requirement invariant tube_2_channel_c_3_on needs tube_2_mode.operational and (tube_2_emergency_cabinet_A_sensor_open.on or tube_2_emergency_cabinet_C_sensor_open.on);
requirement invariant tube_2_channel_c_4_on needs tube_2_SOS.on;
requirement invariant tube_2_channel_c_5_on needs tube_2_smoke_detection.mode > 4;
requirement invariant tube_2_channel_c_6_on needs tube_2_escape_door_sensor_open.on;
requirement invariant tube_2_channel_c_1_off needs not(not tube_2_mode.operational and (not tube_2_traffic_light_1_mode.red or not tube_2_traffic_light_2_mode.red or not tube_2_traffic_light_3_mode.red));
requirement invariant tube_2_channel_c_2_off needs not(tube_2_boom_barrier_1_actuator_down.on or tube_2_boom_barrier_2_actuator_down.on);
requirement invariant tube_2_channel_c_3_off needs not(tube_2_mode.operational and (tube_2_emergency_cabinet_A_sensor_open.on or tube_2_emergency_cabinet_C_sensor_open.on));
requirement invariant tube_2_channel_c_4_off needs not tube_2_SOS.on;
requirement invariant tube_2_channel_c_5_off needs not(tube_2_smoke_detection.mode > 4);
requirement invariant tube_2_channel_c_6_off needs not tube_2_escape_door_sensor_open.on;
requirement invariant tube_2_recorder_c_on needs tube_2_mode.emergency or tube_2_mode.support;
requirement invariant tube_2_recorder_c_off needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_switch_timer_audio_c_on needs tube_2_evacuation.on;
requirement invariant tube_2_switch_timer_audio_c_off needs tube_2_evacuation.off;
requirement invariant tube_2_boom_barrier_1_actuator_up_c_on needs tube_2_boom_barrier_1_actuator_down.off;
requirement invariant tube_2_boom_barrier_1_actuator_up_c_on needs not(tube_2_boom_barrier_1_sensor_open.on and tube_2_boom_barrier_1_actuator_up.off and tube_2_boom_barrier_1_actuator_down.off);
requirement invariant tube_2_boom_barrier_1_actuator_up_c_off needs tube_2_boom_barrier_1_sensor_open.on;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs tube_2_boom_barrier_1_actuator_up.off;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs not(tube_2_boom_barrier_1_sensor_closed.on and tube_2_boom_barrier_1_actuator_up.off and tube_2_boom_barrier_1_actuator_down.off);
requirement invariant tube_2_boom_barrier_1_actuator_down_c_off needs tube_2_boom_barrier_1_sensor_closed.on;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs tube_2_boom_barrier_1_obstacle_detection.off;
requirement invariant tube_2_boom_barrier_2_actuator_up_c_on needs tube_2_boom_barrier_2_actuator_down.off;
requirement invariant tube_2_boom_barrier_2_actuator_up_c_on needs not(tube_2_boom_barrier_2_sensor_open.on and tube_2_boom_barrier_2_actuator_up.off and tube_2_boom_barrier_2_actuator_down.off);
requirement invariant tube_2_boom_barrier_2_actuator_up_c_off needs tube_2_boom_barrier_2_sensor_open.on;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs tube_2_boom_barrier_2_actuator_up.off;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs not(tube_2_boom_barrier_2_sensor_closed.on and tube_2_boom_barrier_2_actuator_up.off and tube_2_boom_barrier_2_actuator_down.off);
requirement invariant tube_2_boom_barrier_2_actuator_down_c_off needs tube_2_boom_barrier_2_sensor_closed.on;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs tube_2_boom_barrier_2_obstacle_detection.off;
requirement invariant tube_2_traffic_light_1_timer_release_signal_c_on needs tube_2_traffic_light_1_mode.red;
requirement invariant tube_2_traffic_light_1_timer_release_signal_c_reset needs not tube_2_traffic_light_1_mode.red;
requirement invariant tube_2_traffic_light_2_timer_release_signal_c_on needs tube_2_traffic_light_2_mode.red;
requirement invariant tube_2_traffic_light_2_timer_release_signal_c_reset needs not tube_2_traffic_light_2_mode.red;
requirement invariant tube_2_traffic_light_3_timer_release_signal_c_on needs tube_2_traffic_light_3_mode.red;
requirement invariant tube_2_traffic_light_3_timer_release_signal_c_reset needs not tube_2_traffic_light_3_mode.red;
requirement invariant tube_2_j32_timer_release_signal_c_on needs tube_2_j32_mode.on;
requirement invariant tube_2_j32_timer_release_signal_c_reset needs tube_2_j32_mode.off;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs tube_2_traffic_light_1_release_signal.on;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs tube_2_traffic_light_2_release_signal.on;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs tube_2_traffic_light_3_release_signal.on;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_on needs not tube_2_mode.operational;
requirement invariant tube_2_boom_barrier_1_actuator_down_c_off_emergency needs tube_2_boom_barrier_1_obstacle_detection.on or tube_2_traffic_light_1_release_signal.off or tube_2_traffic_light_2_release_signal.off or tube_2_traffic_light_3_release_signal.off;
requirement invariant tube_2_boom_barrier_1_actuator_up_c_on needs tube_2_mode.operational;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs tube_2_traffic_light_1_release_signal.on;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs tube_2_traffic_light_2_release_signal.on;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs tube_2_traffic_light_3_release_signal.on;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_on needs not tube_2_mode.operational;
requirement invariant tube_2_boom_barrier_2_actuator_down_c_off_emergency needs tube_2_boom_barrier_2_obstacle_detection.on or tube_2_traffic_light_1_release_signal.off or tube_2_traffic_light_2_release_signal.off or tube_2_traffic_light_3_release_signal.off;
requirement invariant tube_2_boom_barrier_2_actuator_up_c_on needs tube_2_mode.operational;
requirement invariant tube_2_traffic_light_1_mode.red and (tube_2_boom_barrier_1_sensor_closed.on and tube_2_boom_barrier_1_actuator_up.off and tube_2_boom_barrier_1_actuator_down.off) disables tube_2_traffic_light_1_mode_c_flashing;
requirement invariant tube_2_traffic_light_1_mode.red and (tube_2_boom_barrier_2_sensor_closed.on and tube_2_boom_barrier_2_actuator_up.off and tube_2_boom_barrier_2_actuator_down.off) disables tube_2_traffic_light_1_mode_c_flashing;
requirement invariant tube_2_j32_mode.off disables tube_2_traffic_light_1_mode_c_flashing;
requirement invariant tube_2_traffic_light_1_mode.off and not tube_2_j32_timer_release_signal.finished disables tube_2_traffic_light_1_mode_c_flashing;
requirement invariant tube_2_traffic_light_1_mode_c_off needs tube_2_mode.operational;
requirement invariant tube_2_traffic_light_1_mode_c_flashing needs tube_2_traffic_light_1_mode.red and tube_2_mode.operational or tube_2_traffic_light_1_mode.off and not tube_2_mode.operational;
requirement invariant tube_2_traffic_light_1_mode_c_yellow needs not tube_2_mode.operational;
requirement invariant tube_2_traffic_light_2_mode.red and (tube_2_boom_barrier_1_sensor_closed.on and tube_2_boom_barrier_1_actuator_up.off and tube_2_boom_barrier_1_actuator_down.off) disables tube_2_traffic_light_2_mode_c_flashing;
requirement invariant tube_2_traffic_light_2_mode.red and (tube_2_boom_barrier_2_sensor_closed.on and tube_2_boom_barrier_2_actuator_up.off and tube_2_boom_barrier_2_actuator_down.off) disables tube_2_traffic_light_2_mode_c_flashing;
requirement invariant tube_2_j32_mode.off disables tube_2_traffic_light_2_mode_c_flashing;
requirement invariant tube_2_traffic_light_2_mode.off and not tube_2_j32_timer_release_signal.finished disables tube_2_traffic_light_2_mode_c_flashing;
requirement invariant tube_2_traffic_light_2_mode_c_off needs tube_2_mode.operational;
requirement invariant tube_2_traffic_light_2_mode_c_flashing needs tube_2_traffic_light_2_mode.red and tube_2_mode.operational or tube_2_traffic_light_2_mode.off and not tube_2_mode.operational;
requirement invariant tube_2_traffic_light_2_mode_c_yellow needs not tube_2_mode.operational;
requirement invariant tube_2_traffic_light_3_mode.red and (tube_2_boom_barrier_1_sensor_closed.on and tube_2_boom_barrier_1_actuator_up.off and tube_2_boom_barrier_1_actuator_down.off) disables tube_2_traffic_light_3_mode_c_flashing;
requirement invariant tube_2_traffic_light_3_mode.red and (tube_2_boom_barrier_2_sensor_closed.on and tube_2_boom_barrier_2_actuator_up.off and tube_2_boom_barrier_2_actuator_down.off) disables tube_2_traffic_light_3_mode_c_flashing;
requirement invariant tube_2_j32_mode.off disables tube_2_traffic_light_3_mode_c_flashing;
requirement invariant tube_2_traffic_light_3_mode.off and not tube_2_j32_timer_release_signal.finished disables tube_2_traffic_light_3_mode_c_flashing;
requirement invariant tube_2_traffic_light_3_mode_c_off needs tube_2_mode.operational;
requirement invariant tube_2_traffic_light_3_mode_c_flashing needs tube_2_traffic_light_3_mode.red and tube_2_mode.operational or tube_2_traffic_light_3_mode.off and not tube_2_mode.operational;
requirement invariant tube_2_traffic_light_3_mode_c_yellow needs not tube_2_mode.operational;
requirement invariant tube_2_ventilation_entrance_c_0 needs tube_2_mode.operational or tube_2_mode.support;
requirement invariant tube_2_ventilation_entrance_c_0 needs tube_2_smoke_detection.mode = 0 or tube_2_mode.support;
requirement invariant tube_2_ventilation_entrance_c_1 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_entrance_c_1 needs tube_2_smoke_detection.mode = 1;
requirement invariant tube_2_ventilation_entrance_c_2 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_entrance_c_2 needs tube_2_smoke_detection.mode = 2;
requirement invariant tube_2_ventilation_entrance_c_3 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_entrance_c_3 needs tube_2_smoke_detection.mode = 3;
requirement invariant tube_2_ventilation_entrance_c_4 needs tube_2_mode.operational and tube_2_smoke_detection.mode = 4 or tube_2_mode.recovery and tube_2_smoke_detection.mode < 5;
requirement invariant tube_2_ventilation_entrance_c_5 needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_ventilation_entrance_c_5 needs tube_2_smoke_detection.mode = 5;
requirement invariant tube_2_ventilation_entrance_c_6 needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_ventilation_entrance_c_6 needs tube_2_smoke_detection.mode = 6;
requirement invariant tube_2_ventilation_entrance_c_7 needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_ventilation_entrance_c_7 needs tube_2_smoke_detection.mode = 7;
requirement invariant tube_2_ventilation_entrance_c_8 needs (tube_2_mode.operational or tube_2_mode.recovery) and tube_2_smoke_detection.mode = 8 or tube_2_mode.emergency;
requirement invariant tube_2_ventilation_c_0 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_c_0 needs tube_2_smoke_detection.mode = 0;
requirement invariant tube_2_ventilation_c_1 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_c_1 needs tube_2_smoke_detection.mode = 1;
requirement invariant tube_2_ventilation_c_2 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_c_2 needs tube_2_smoke_detection.mode = 2;
requirement invariant tube_2_ventilation_c_3 needs tube_2_mode.operational;
requirement invariant tube_2_ventilation_c_3 needs tube_2_smoke_detection.mode = 3;
requirement invariant tube_2_ventilation_c_4 needs tube_2_mode.operational and tube_2_smoke_detection.mode = 4 or tube_2_mode.recovery and tube_2_smoke_detection.mode < 5;
requirement invariant tube_2_ventilation_c_5 needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_ventilation_c_5 needs tube_2_smoke_detection.mode = 5;
requirement invariant tube_2_ventilation_c_6 needs (tube_2_mode.operational or tube_2_mode.recovery) and tube_2_smoke_detection.mode = 6 or tube_2_mode.support and tube_2_smoke_detection.mode < 7;
requirement invariant tube_2_ventilation_c_7 needs tube_2_mode.operational or tube_2_mode.recovery or tube_2_mode.support;
requirement invariant tube_2_ventilation_c_7 needs tube_2_smoke_detection.mode = 7;
requirement invariant tube_2_ventilation_c_8 needs tube_2_smoke_detection.mode = 8 or tube_2_mode.emergency;
requirement invariant tube_2_lighting_c_0 needs tube_2_mode.operational;
requirement invariant tube_2_lighting_c_0 needs tube_2_lightsensor.mode = 0;
requirement invariant tube_2_lighting_c_1 needs tube_2_mode.operational;
requirement invariant tube_2_lighting_c_1 needs tube_2_lightsensor.mode = 1;
requirement invariant tube_2_lighting_c_2 needs tube_2_mode.operational;
requirement invariant tube_2_lighting_c_2 needs tube_2_lightsensor.mode = 2;
requirement invariant tube_2_lighting_c_3 needs tube_2_mode.operational;
requirement invariant tube_2_lighting_c_3 needs tube_2_lightsensor.mode = 3;
requirement invariant tube_2_lighting_c_4 needs tube_2_mode.operational and tube_2_lightsensor.mode = 4 or tube_2_mode.recovery and tube_2_lightsensor.mode < 5;
requirement invariant tube_2_lighting_c_5 needs tube_2_mode.operational or tube_2_mode.recovery;
requirement invariant tube_2_lighting_c_5 needs tube_2_lightsensor.mode = 5;
requirement invariant tube_2_lighting_c_6 needs (tube_2_mode.operational or tube_2_mode.recovery) and tube_2_lightsensor.mode = 6 or tube_2_mode.support and tube_2_lightsensor.mode < 7;
requirement invariant tube_2_lighting_c_7 needs tube_2_mode.operational or tube_2_mode.recovery or tube_2_mode.support;
requirement invariant tube_2_lighting_c_7 needs tube_2_lightsensor.mode = 7;
requirement invariant tube_2_lighting_c_8 needs tube_2_lightsensor.mode = 8 or tube_2_mode.emergency;
requirement invariant tube_2_escape_door_contour_lighting_c_on needs tube_2_evacuation.on;
requirement invariant tube_2_escape_door_contour_lighting_c_off needs tube_2_evacuation.off;
requirement invariant tube_2_escape_door_sound_beacon_c_on needs tube_2_switch_timer_audio.on_2;
requirement invariant tube_2_escape_door_sound_beacon_c_on needs tube_2_intercom.off;
requirement invariant tube_2_escape_door_sound_beacon_c_off needs not tube_2_switch_timer_audio.on_2;
requirement invariant tube_2_intercom_c_on needs tube_2_switch_timer_audio.on_1;
requirement invariant tube_2_intercom_c_on needs tube_2_escape_door_sound_beacon.off;
requirement invariant tube_2_intercom_c_off needs not tube_2_switch_timer_audio.on_1;
requirement invariant middle_tunnel_channel_pressure_c_left needs middle_tunnel_channel_pressure.off;
requirement invariant middle_tunnel_channel_pressure_c_right needs middle_tunnel_channel_pressure.off;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_upward needs middle_tunnel_channel_dynamic_escaperoute_indication.off;
requirement invariant middle_tunnel_channel_dynamic_escaperoute_indication_c_downward needs middle_tunnel_channel_dynamic_escaperoute_indication.off;
requirement invariant middle_tunnel_channel_pressure_c_left needs tube_1_standby.on or not tube_1_mode.operational and not tube_1_mode.support;
requirement invariant middle_tunnel_channel_pressure_c_right needs tube_2_standby.on or not tube_2_mode.operational and not tube_2_mode.support;
requirement invariant middle_tunnel_channel_pressure_c_off needs tube_1_mode.operational;
requirement invariant middle_tunnel_channel_pressure_c_off needs tube_2_mode.operational;
requirement invariant middle_tunnel_channel_pressure_c_off needs tube_1_standby.off;
requirement invariant middle_tunnel_channel_pressure_c_off needs tube_2_standby.off;
